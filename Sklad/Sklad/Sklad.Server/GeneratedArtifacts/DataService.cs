//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Data Services
    
    /// <summary>
    /// Предоставляет элементы для запроса и обновления данных в источнике данных skladData.
    /// </summary>
    public sealed partial class skladDataService
        : global::LightSwitchApplication.skladData
    {
        #region Constructors
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public skladDataService() : base()
        {
        }
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Получает объект Application для данного приложения.  Объект Application предоставляет доступ к активным экранам, методы для открытых экранов и доступ к текущему пользователю.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Получает вмещающую рабочую область данных.  Рабочая область данных предоставляет доступ ко всем источникам данных в приложении.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Server Interceptions Points
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Actions_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Actions_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Actions_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Actions_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Actions_Inserting(global::LightSwitchApplication.ActionsItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Actions_Inserted(global::LightSwitchApplication.ActionsItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Actions_Updating(global::LightSwitchApplication.ActionsItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Actions_Updated(global::LightSwitchApplication.ActionsItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Actions_Deleting(global::LightSwitchApplication.ActionsItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Actions_Deleted(global::LightSwitchApplication.ActionsItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Actions_Validate(global::LightSwitchApplication.ActionsItem entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Actions_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ActionsItem, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActionsFiller_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActionsFiller_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActionsFiller_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActionsFiller_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActionsFiller_Inserting(global::LightSwitchApplication.ActionsFillerItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActionsFiller_Inserted(global::LightSwitchApplication.ActionsFillerItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActionsFiller_Updating(global::LightSwitchApplication.ActionsFillerItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActionsFiller_Updated(global::LightSwitchApplication.ActionsFillerItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActionsFiller_Deleting(global::LightSwitchApplication.ActionsFillerItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActionsFiller_Deleted(global::LightSwitchApplication.ActionsFillerItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActionsFiller_Validate(global::LightSwitchApplication.ActionsFillerItem entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActionsFiller_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ActionsFillerItem, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Craft_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Craft_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Craft_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Craft_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Craft_Inserting(global::LightSwitchApplication.CraftItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Craft_Inserted(global::LightSwitchApplication.CraftItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Craft_Updating(global::LightSwitchApplication.CraftItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Craft_Updated(global::LightSwitchApplication.CraftItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Craft_Deleting(global::LightSwitchApplication.CraftItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Craft_Deleted(global::LightSwitchApplication.CraftItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Craft_Validate(global::LightSwitchApplication.CraftItem entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Craft_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.CraftItem, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CraftAction_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CraftAction_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CraftAction_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CraftAction_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CraftAction_Inserting(global::LightSwitchApplication.CraftActionItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CraftAction_Inserted(global::LightSwitchApplication.CraftActionItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CraftAction_Updating(global::LightSwitchApplication.CraftActionItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CraftAction_Updated(global::LightSwitchApplication.CraftActionItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CraftAction_Deleting(global::LightSwitchApplication.CraftActionItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CraftAction_Deleted(global::LightSwitchApplication.CraftActionItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CraftAction_Validate(global::LightSwitchApplication.CraftActionItem entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CraftAction_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.CraftActionItem, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CraftFiller_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CraftFiller_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CraftFiller_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CraftFiller_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CraftFiller_Inserting(global::LightSwitchApplication.CraftFillerItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CraftFiller_Inserted(global::LightSwitchApplication.CraftFillerItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CraftFiller_Updating(global::LightSwitchApplication.CraftFillerItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CraftFiller_Updated(global::LightSwitchApplication.CraftFillerItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CraftFiller_Deleting(global::LightSwitchApplication.CraftFillerItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CraftFiller_Deleted(global::LightSwitchApplication.CraftFillerItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CraftFiller_Validate(global::LightSwitchApplication.CraftFillerItem entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CraftFiller_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.CraftFillerItem, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LogActionsAndCraft_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LogActionsAndCraft_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LogActionsAndCraft_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LogActionsAndCraft_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LogActionsAndCraft_Inserting(global::LightSwitchApplication.LogActionsAndCraftItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LogActionsAndCraft_Inserted(global::LightSwitchApplication.LogActionsAndCraftItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LogActionsAndCraft_Updating(global::LightSwitchApplication.LogActionsAndCraftItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LogActionsAndCraft_Updated(global::LightSwitchApplication.LogActionsAndCraftItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LogActionsAndCraft_Deleting(global::LightSwitchApplication.LogActionsAndCraftItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LogActionsAndCraft_Deleted(global::LightSwitchApplication.LogActionsAndCraftItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LogActionsAndCraft_Validate(global::LightSwitchApplication.LogActionsAndCraftItem entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LogActionsAndCraft_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.LogActionsAndCraftItem, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LogMatsAndGoodsQuantities_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LogMatsAndGoodsQuantities_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LogMatsAndGoodsQuantities_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LogMatsAndGoodsQuantities_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LogMatsAndGoodsQuantities_Inserting(global::LightSwitchApplication.LogMatsAndGoodsQuantitiesItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LogMatsAndGoodsQuantities_Inserted(global::LightSwitchApplication.LogMatsAndGoodsQuantitiesItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LogMatsAndGoodsQuantities_Updating(global::LightSwitchApplication.LogMatsAndGoodsQuantitiesItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LogMatsAndGoodsQuantities_Updated(global::LightSwitchApplication.LogMatsAndGoodsQuantitiesItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LogMatsAndGoodsQuantities_Deleting(global::LightSwitchApplication.LogMatsAndGoodsQuantitiesItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LogMatsAndGoodsQuantities_Deleted(global::LightSwitchApplication.LogMatsAndGoodsQuantitiesItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LogMatsAndGoodsQuantities_Validate(global::LightSwitchApplication.LogMatsAndGoodsQuantitiesItem entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LogMatsAndGoodsQuantities_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.LogMatsAndGoodsQuantitiesItem, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MatsAndGoods_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MatsAndGoods_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MatsAndGoods_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MatsAndGoods_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MatsAndGoods_Inserting(global::LightSwitchApplication.MatsAndGoodsItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MatsAndGoods_Inserted(global::LightSwitchApplication.MatsAndGoodsItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MatsAndGoods_Updating(global::LightSwitchApplication.MatsAndGoodsItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MatsAndGoods_Updated(global::LightSwitchApplication.MatsAndGoodsItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MatsAndGoods_Deleting(global::LightSwitchApplication.MatsAndGoodsItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MatsAndGoods_Deleted(global::LightSwitchApplication.MatsAndGoodsItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MatsAndGoods_Validate(global::LightSwitchApplication.MatsAndGoodsItem entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MatsAndGoods_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.MatsAndGoodsItem, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MatsAndGoodsQuantities_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MatsAndGoodsQuantities_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MatsAndGoodsQuantities_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MatsAndGoodsQuantities_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MatsAndGoodsQuantities_Inserting(global::LightSwitchApplication.MatsAndGoodsQuantitiesItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MatsAndGoodsQuantities_Inserted(global::LightSwitchApplication.MatsAndGoodsQuantitiesItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MatsAndGoodsQuantities_Updating(global::LightSwitchApplication.MatsAndGoodsQuantitiesItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MatsAndGoodsQuantities_Updated(global::LightSwitchApplication.MatsAndGoodsQuantitiesItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MatsAndGoodsQuantities_Deleting(global::LightSwitchApplication.MatsAndGoodsQuantitiesItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MatsAndGoodsQuantities_Deleted(global::LightSwitchApplication.MatsAndGoodsQuantitiesItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MatsAndGoodsQuantities_Validate(global::LightSwitchApplication.MatsAndGoodsQuantitiesItem entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MatsAndGoodsQuantities_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.MatsAndGoodsQuantitiesItem, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Recipes_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Recipes_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Recipes_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Recipes_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Recipes_Inserting(global::LightSwitchApplication.RecipesItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Recipes_Inserted(global::LightSwitchApplication.RecipesItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Recipes_Updating(global::LightSwitchApplication.RecipesItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Recipes_Updated(global::LightSwitchApplication.RecipesItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Recipes_Deleting(global::LightSwitchApplication.RecipesItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Recipes_Deleted(global::LightSwitchApplication.RecipesItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Recipes_Validate(global::LightSwitchApplication.RecipesItem entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Recipes_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.RecipesItem, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RecipesComponents_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RecipesComponents_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RecipesComponents_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RecipesComponents_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RecipesComponents_Inserting(global::LightSwitchApplication.RecipesComponentsItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RecipesComponents_Inserted(global::LightSwitchApplication.RecipesComponentsItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RecipesComponents_Updating(global::LightSwitchApplication.RecipesComponentsItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RecipesComponents_Updated(global::LightSwitchApplication.RecipesComponentsItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RecipesComponents_Deleting(global::LightSwitchApplication.RecipesComponentsItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RecipesComponents_Deleted(global::LightSwitchApplication.RecipesComponentsItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RecipesComponents_Validate(global::LightSwitchApplication.RecipesComponentsItem entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RecipesComponents_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.RecipesComponentsItem, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Responsible_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Responsible_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Responsible_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Responsible_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Responsible_Inserting(global::LightSwitchApplication.ResponsibleItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Responsible_Inserted(global::LightSwitchApplication.ResponsibleItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Responsible_Updating(global::LightSwitchApplication.ResponsibleItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Responsible_Updated(global::LightSwitchApplication.ResponsibleItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Responsible_Deleting(global::LightSwitchApplication.ResponsibleItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Responsible_Deleted(global::LightSwitchApplication.ResponsibleItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Responsible_Validate(global::LightSwitchApplication.ResponsibleItem entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Responsible_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ResponsibleItem, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Skladi_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Skladi_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Skladi_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Skladi_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Skladi_Inserting(global::LightSwitchApplication.SkladiItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Skladi_Inserted(global::LightSwitchApplication.SkladiItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Skladi_Updating(global::LightSwitchApplication.SkladiItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Skladi_Updated(global::LightSwitchApplication.SkladiItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Skladi_Deleting(global::LightSwitchApplication.SkladiItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Skladi_Deleted(global::LightSwitchApplication.SkladiItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Skladi_Validate(global::LightSwitchApplication.SkladiItem entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Skladi_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.SkladiItem, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Suppliers_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Suppliers_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Suppliers_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Suppliers_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Suppliers_Inserting(global::LightSwitchApplication.SuppliersItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Suppliers_Inserted(global::LightSwitchApplication.SuppliersItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Suppliers_Updating(global::LightSwitchApplication.SuppliersItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Suppliers_Updated(global::LightSwitchApplication.SuppliersItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Suppliers_Deleting(global::LightSwitchApplication.SuppliersItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Suppliers_Deleted(global::LightSwitchApplication.SuppliersItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Suppliers_Validate(global::LightSwitchApplication.SuppliersItem entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Suppliers_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.SuppliersItem, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executed();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void WorkingSkladi_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void WorkingSkladi_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void WorkingSkladi_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.SkladiItem> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void WorkingSkladi_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.SkladiItem> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void WorkingSkladi_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_Executing(global::Microsoft.LightSwitch.QueryExecutingDescriptor queryDescriptor);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_Executed(global::Microsoft.LightSwitch.QueryExecutedDescriptor queryDescriptor);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_ExecuteFailed(global::Microsoft.LightSwitch.QueryExecuteFailedDescriptor queryDescriptor);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void skladData_InitializingConnection(global::Microsoft.LightSwitch.DatabaseConnectionState state);
    
        #endregion
    
        #region Details Class
    
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        public static new class DetailsClass
        {
    
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1810:InitializeReferenceTypeStaticFieldsInline")]
            static DetailsClass()
            {
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.skladDataService, global::LightSwitchApplication.ActionsItem>
                __ActionsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.skladDataService, global::LightSwitchApplication.ActionsItem>(
                    "Actions",
                    global::LightSwitchApplication.skladDataService.DetailsClass.__Actions_CanInsert,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__Actions_CanUpdate,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__Actions_CanDelete,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__Actions_CanRead,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__Actions_Inserting,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__Actions_Inserted,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__Actions_Updating,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__Actions_Updated,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__Actions_Deleting,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__Actions_Deleted,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__Actions_Validate,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__Actions_Filter);
            private static bool __Actions_CanInsert(global::LightSwitchApplication.skladDataService d)
            {
                bool result = true;
                d.Actions_CanInsert(ref result);
                return result;
            }
            private static bool __Actions_CanUpdate(global::LightSwitchApplication.skladDataService d)
            {
                bool result = true;
                d.Actions_CanUpdate(ref result);
                return result;
            }
            private static bool __Actions_CanDelete(global::LightSwitchApplication.skladDataService d)
            {
                bool result = true;
                d.Actions_CanDelete(ref result);
                return result;
            }
            private static bool __Actions_CanRead(global::LightSwitchApplication.skladDataService d)
            {
                bool result = true;
                d.Actions_CanRead(ref result);
                return result;
            }
            private static void __Actions_Inserting(global::LightSwitchApplication.skladDataService d, global::LightSwitchApplication.ActionsItem e)
            {
                d.Actions_Inserting(e);
            }
            private static void __Actions_Inserted(global::LightSwitchApplication.skladDataService d, global::LightSwitchApplication.ActionsItem e)
            {
                d.Actions_Inserted(e);
            }
            private static void __Actions_Updating(global::LightSwitchApplication.skladDataService d, global::LightSwitchApplication.ActionsItem e)
            {
                d.Actions_Updating(e);
            }
            private static void __Actions_Updated(global::LightSwitchApplication.skladDataService d, global::LightSwitchApplication.ActionsItem e)
            {
                d.Actions_Updated(e);
            }
            private static void __Actions_Deleting(global::LightSwitchApplication.skladDataService d, global::LightSwitchApplication.ActionsItem e)
            {
                d.Actions_Deleting(e);
            }
            private static void __Actions_Deleted(global::LightSwitchApplication.skladDataService d, global::LightSwitchApplication.ActionsItem e)
            {
                d.Actions_Deleted(e);
            }
            private static void __Actions_Validate(global::LightSwitchApplication.skladDataService d, global::LightSwitchApplication.ActionsItem e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Actions_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ActionsItem, bool>> __Actions_Filter(global::LightSwitchApplication.skladDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ActionsItem, bool>> filter = null;
                d.Actions_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.skladDataService, global::LightSwitchApplication.ActionsFillerItem>
                __ActionsFillerEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.skladDataService, global::LightSwitchApplication.ActionsFillerItem>(
                    "ActionsFiller",
                    global::LightSwitchApplication.skladDataService.DetailsClass.__ActionsFiller_CanInsert,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__ActionsFiller_CanUpdate,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__ActionsFiller_CanDelete,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__ActionsFiller_CanRead,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__ActionsFiller_Inserting,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__ActionsFiller_Inserted,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__ActionsFiller_Updating,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__ActionsFiller_Updated,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__ActionsFiller_Deleting,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__ActionsFiller_Deleted,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__ActionsFiller_Validate,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__ActionsFiller_Filter);
            private static bool __ActionsFiller_CanInsert(global::LightSwitchApplication.skladDataService d)
            {
                bool result = true;
                d.ActionsFiller_CanInsert(ref result);
                return result;
            }
            private static bool __ActionsFiller_CanUpdate(global::LightSwitchApplication.skladDataService d)
            {
                bool result = true;
                d.ActionsFiller_CanUpdate(ref result);
                return result;
            }
            private static bool __ActionsFiller_CanDelete(global::LightSwitchApplication.skladDataService d)
            {
                bool result = true;
                d.ActionsFiller_CanDelete(ref result);
                return result;
            }
            private static bool __ActionsFiller_CanRead(global::LightSwitchApplication.skladDataService d)
            {
                bool result = true;
                d.ActionsFiller_CanRead(ref result);
                return result;
            }
            private static void __ActionsFiller_Inserting(global::LightSwitchApplication.skladDataService d, global::LightSwitchApplication.ActionsFillerItem e)
            {
                d.ActionsFiller_Inserting(e);
            }
            private static void __ActionsFiller_Inserted(global::LightSwitchApplication.skladDataService d, global::LightSwitchApplication.ActionsFillerItem e)
            {
                d.ActionsFiller_Inserted(e);
            }
            private static void __ActionsFiller_Updating(global::LightSwitchApplication.skladDataService d, global::LightSwitchApplication.ActionsFillerItem e)
            {
                d.ActionsFiller_Updating(e);
            }
            private static void __ActionsFiller_Updated(global::LightSwitchApplication.skladDataService d, global::LightSwitchApplication.ActionsFillerItem e)
            {
                d.ActionsFiller_Updated(e);
            }
            private static void __ActionsFiller_Deleting(global::LightSwitchApplication.skladDataService d, global::LightSwitchApplication.ActionsFillerItem e)
            {
                d.ActionsFiller_Deleting(e);
            }
            private static void __ActionsFiller_Deleted(global::LightSwitchApplication.skladDataService d, global::LightSwitchApplication.ActionsFillerItem e)
            {
                d.ActionsFiller_Deleted(e);
            }
            private static void __ActionsFiller_Validate(global::LightSwitchApplication.skladDataService d, global::LightSwitchApplication.ActionsFillerItem e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.ActionsFiller_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ActionsFillerItem, bool>> __ActionsFiller_Filter(global::LightSwitchApplication.skladDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ActionsFillerItem, bool>> filter = null;
                d.ActionsFiller_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.skladDataService, global::LightSwitchApplication.CraftItem>
                __CraftEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.skladDataService, global::LightSwitchApplication.CraftItem>(
                    "Craft",
                    global::LightSwitchApplication.skladDataService.DetailsClass.__Craft_CanInsert,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__Craft_CanUpdate,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__Craft_CanDelete,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__Craft_CanRead,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__Craft_Inserting,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__Craft_Inserted,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__Craft_Updating,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__Craft_Updated,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__Craft_Deleting,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__Craft_Deleted,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__Craft_Validate,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__Craft_Filter);
            private static bool __Craft_CanInsert(global::LightSwitchApplication.skladDataService d)
            {
                bool result = true;
                d.Craft_CanInsert(ref result);
                return result;
            }
            private static bool __Craft_CanUpdate(global::LightSwitchApplication.skladDataService d)
            {
                bool result = true;
                d.Craft_CanUpdate(ref result);
                return result;
            }
            private static bool __Craft_CanDelete(global::LightSwitchApplication.skladDataService d)
            {
                bool result = true;
                d.Craft_CanDelete(ref result);
                return result;
            }
            private static bool __Craft_CanRead(global::LightSwitchApplication.skladDataService d)
            {
                bool result = true;
                d.Craft_CanRead(ref result);
                return result;
            }
            private static void __Craft_Inserting(global::LightSwitchApplication.skladDataService d, global::LightSwitchApplication.CraftItem e)
            {
                d.Craft_Inserting(e);
            }
            private static void __Craft_Inserted(global::LightSwitchApplication.skladDataService d, global::LightSwitchApplication.CraftItem e)
            {
                d.Craft_Inserted(e);
            }
            private static void __Craft_Updating(global::LightSwitchApplication.skladDataService d, global::LightSwitchApplication.CraftItem e)
            {
                d.Craft_Updating(e);
            }
            private static void __Craft_Updated(global::LightSwitchApplication.skladDataService d, global::LightSwitchApplication.CraftItem e)
            {
                d.Craft_Updated(e);
            }
            private static void __Craft_Deleting(global::LightSwitchApplication.skladDataService d, global::LightSwitchApplication.CraftItem e)
            {
                d.Craft_Deleting(e);
            }
            private static void __Craft_Deleted(global::LightSwitchApplication.skladDataService d, global::LightSwitchApplication.CraftItem e)
            {
                d.Craft_Deleted(e);
            }
            private static void __Craft_Validate(global::LightSwitchApplication.skladDataService d, global::LightSwitchApplication.CraftItem e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Craft_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.CraftItem, bool>> __Craft_Filter(global::LightSwitchApplication.skladDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.CraftItem, bool>> filter = null;
                d.Craft_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.skladDataService, global::LightSwitchApplication.CraftActionItem>
                __CraftActionEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.skladDataService, global::LightSwitchApplication.CraftActionItem>(
                    "CraftAction",
                    global::LightSwitchApplication.skladDataService.DetailsClass.__CraftAction_CanInsert,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__CraftAction_CanUpdate,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__CraftAction_CanDelete,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__CraftAction_CanRead,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__CraftAction_Inserting,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__CraftAction_Inserted,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__CraftAction_Updating,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__CraftAction_Updated,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__CraftAction_Deleting,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__CraftAction_Deleted,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__CraftAction_Validate,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__CraftAction_Filter);
            private static bool __CraftAction_CanInsert(global::LightSwitchApplication.skladDataService d)
            {
                bool result = true;
                d.CraftAction_CanInsert(ref result);
                return result;
            }
            private static bool __CraftAction_CanUpdate(global::LightSwitchApplication.skladDataService d)
            {
                bool result = true;
                d.CraftAction_CanUpdate(ref result);
                return result;
            }
            private static bool __CraftAction_CanDelete(global::LightSwitchApplication.skladDataService d)
            {
                bool result = true;
                d.CraftAction_CanDelete(ref result);
                return result;
            }
            private static bool __CraftAction_CanRead(global::LightSwitchApplication.skladDataService d)
            {
                bool result = true;
                d.CraftAction_CanRead(ref result);
                return result;
            }
            private static void __CraftAction_Inserting(global::LightSwitchApplication.skladDataService d, global::LightSwitchApplication.CraftActionItem e)
            {
                d.CraftAction_Inserting(e);
            }
            private static void __CraftAction_Inserted(global::LightSwitchApplication.skladDataService d, global::LightSwitchApplication.CraftActionItem e)
            {
                d.CraftAction_Inserted(e);
            }
            private static void __CraftAction_Updating(global::LightSwitchApplication.skladDataService d, global::LightSwitchApplication.CraftActionItem e)
            {
                d.CraftAction_Updating(e);
            }
            private static void __CraftAction_Updated(global::LightSwitchApplication.skladDataService d, global::LightSwitchApplication.CraftActionItem e)
            {
                d.CraftAction_Updated(e);
            }
            private static void __CraftAction_Deleting(global::LightSwitchApplication.skladDataService d, global::LightSwitchApplication.CraftActionItem e)
            {
                d.CraftAction_Deleting(e);
            }
            private static void __CraftAction_Deleted(global::LightSwitchApplication.skladDataService d, global::LightSwitchApplication.CraftActionItem e)
            {
                d.CraftAction_Deleted(e);
            }
            private static void __CraftAction_Validate(global::LightSwitchApplication.skladDataService d, global::LightSwitchApplication.CraftActionItem e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.CraftAction_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.CraftActionItem, bool>> __CraftAction_Filter(global::LightSwitchApplication.skladDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.CraftActionItem, bool>> filter = null;
                d.CraftAction_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.skladDataService, global::LightSwitchApplication.CraftFillerItem>
                __CraftFillerEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.skladDataService, global::LightSwitchApplication.CraftFillerItem>(
                    "CraftFiller",
                    global::LightSwitchApplication.skladDataService.DetailsClass.__CraftFiller_CanInsert,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__CraftFiller_CanUpdate,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__CraftFiller_CanDelete,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__CraftFiller_CanRead,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__CraftFiller_Inserting,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__CraftFiller_Inserted,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__CraftFiller_Updating,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__CraftFiller_Updated,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__CraftFiller_Deleting,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__CraftFiller_Deleted,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__CraftFiller_Validate,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__CraftFiller_Filter);
            private static bool __CraftFiller_CanInsert(global::LightSwitchApplication.skladDataService d)
            {
                bool result = true;
                d.CraftFiller_CanInsert(ref result);
                return result;
            }
            private static bool __CraftFiller_CanUpdate(global::LightSwitchApplication.skladDataService d)
            {
                bool result = true;
                d.CraftFiller_CanUpdate(ref result);
                return result;
            }
            private static bool __CraftFiller_CanDelete(global::LightSwitchApplication.skladDataService d)
            {
                bool result = true;
                d.CraftFiller_CanDelete(ref result);
                return result;
            }
            private static bool __CraftFiller_CanRead(global::LightSwitchApplication.skladDataService d)
            {
                bool result = true;
                d.CraftFiller_CanRead(ref result);
                return result;
            }
            private static void __CraftFiller_Inserting(global::LightSwitchApplication.skladDataService d, global::LightSwitchApplication.CraftFillerItem e)
            {
                d.CraftFiller_Inserting(e);
            }
            private static void __CraftFiller_Inserted(global::LightSwitchApplication.skladDataService d, global::LightSwitchApplication.CraftFillerItem e)
            {
                d.CraftFiller_Inserted(e);
            }
            private static void __CraftFiller_Updating(global::LightSwitchApplication.skladDataService d, global::LightSwitchApplication.CraftFillerItem e)
            {
                d.CraftFiller_Updating(e);
            }
            private static void __CraftFiller_Updated(global::LightSwitchApplication.skladDataService d, global::LightSwitchApplication.CraftFillerItem e)
            {
                d.CraftFiller_Updated(e);
            }
            private static void __CraftFiller_Deleting(global::LightSwitchApplication.skladDataService d, global::LightSwitchApplication.CraftFillerItem e)
            {
                d.CraftFiller_Deleting(e);
            }
            private static void __CraftFiller_Deleted(global::LightSwitchApplication.skladDataService d, global::LightSwitchApplication.CraftFillerItem e)
            {
                d.CraftFiller_Deleted(e);
            }
            private static void __CraftFiller_Validate(global::LightSwitchApplication.skladDataService d, global::LightSwitchApplication.CraftFillerItem e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.CraftFiller_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.CraftFillerItem, bool>> __CraftFiller_Filter(global::LightSwitchApplication.skladDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.CraftFillerItem, bool>> filter = null;
                d.CraftFiller_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.skladDataService, global::LightSwitchApplication.LogActionsAndCraftItem>
                __LogActionsAndCraftEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.skladDataService, global::LightSwitchApplication.LogActionsAndCraftItem>(
                    "LogActionsAndCraft",
                    global::LightSwitchApplication.skladDataService.DetailsClass.__LogActionsAndCraft_CanInsert,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__LogActionsAndCraft_CanUpdate,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__LogActionsAndCraft_CanDelete,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__LogActionsAndCraft_CanRead,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__LogActionsAndCraft_Inserting,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__LogActionsAndCraft_Inserted,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__LogActionsAndCraft_Updating,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__LogActionsAndCraft_Updated,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__LogActionsAndCraft_Deleting,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__LogActionsAndCraft_Deleted,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__LogActionsAndCraft_Validate,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__LogActionsAndCraft_Filter);
            private static bool __LogActionsAndCraft_CanInsert(global::LightSwitchApplication.skladDataService d)
            {
                bool result = true;
                d.LogActionsAndCraft_CanInsert(ref result);
                return result;
            }
            private static bool __LogActionsAndCraft_CanUpdate(global::LightSwitchApplication.skladDataService d)
            {
                bool result = true;
                d.LogActionsAndCraft_CanUpdate(ref result);
                return result;
            }
            private static bool __LogActionsAndCraft_CanDelete(global::LightSwitchApplication.skladDataService d)
            {
                bool result = true;
                d.LogActionsAndCraft_CanDelete(ref result);
                return result;
            }
            private static bool __LogActionsAndCraft_CanRead(global::LightSwitchApplication.skladDataService d)
            {
                bool result = true;
                d.LogActionsAndCraft_CanRead(ref result);
                return result;
            }
            private static void __LogActionsAndCraft_Inserting(global::LightSwitchApplication.skladDataService d, global::LightSwitchApplication.LogActionsAndCraftItem e)
            {
                d.LogActionsAndCraft_Inserting(e);
            }
            private static void __LogActionsAndCraft_Inserted(global::LightSwitchApplication.skladDataService d, global::LightSwitchApplication.LogActionsAndCraftItem e)
            {
                d.LogActionsAndCraft_Inserted(e);
            }
            private static void __LogActionsAndCraft_Updating(global::LightSwitchApplication.skladDataService d, global::LightSwitchApplication.LogActionsAndCraftItem e)
            {
                d.LogActionsAndCraft_Updating(e);
            }
            private static void __LogActionsAndCraft_Updated(global::LightSwitchApplication.skladDataService d, global::LightSwitchApplication.LogActionsAndCraftItem e)
            {
                d.LogActionsAndCraft_Updated(e);
            }
            private static void __LogActionsAndCraft_Deleting(global::LightSwitchApplication.skladDataService d, global::LightSwitchApplication.LogActionsAndCraftItem e)
            {
                d.LogActionsAndCraft_Deleting(e);
            }
            private static void __LogActionsAndCraft_Deleted(global::LightSwitchApplication.skladDataService d, global::LightSwitchApplication.LogActionsAndCraftItem e)
            {
                d.LogActionsAndCraft_Deleted(e);
            }
            private static void __LogActionsAndCraft_Validate(global::LightSwitchApplication.skladDataService d, global::LightSwitchApplication.LogActionsAndCraftItem e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.LogActionsAndCraft_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.LogActionsAndCraftItem, bool>> __LogActionsAndCraft_Filter(global::LightSwitchApplication.skladDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.LogActionsAndCraftItem, bool>> filter = null;
                d.LogActionsAndCraft_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.skladDataService, global::LightSwitchApplication.LogMatsAndGoodsQuantitiesItem>
                __LogMatsAndGoodsQuantitiesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.skladDataService, global::LightSwitchApplication.LogMatsAndGoodsQuantitiesItem>(
                    "LogMatsAndGoodsQuantities",
                    global::LightSwitchApplication.skladDataService.DetailsClass.__LogMatsAndGoodsQuantities_CanInsert,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__LogMatsAndGoodsQuantities_CanUpdate,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__LogMatsAndGoodsQuantities_CanDelete,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__LogMatsAndGoodsQuantities_CanRead,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__LogMatsAndGoodsQuantities_Inserting,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__LogMatsAndGoodsQuantities_Inserted,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__LogMatsAndGoodsQuantities_Updating,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__LogMatsAndGoodsQuantities_Updated,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__LogMatsAndGoodsQuantities_Deleting,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__LogMatsAndGoodsQuantities_Deleted,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__LogMatsAndGoodsQuantities_Validate,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__LogMatsAndGoodsQuantities_Filter);
            private static bool __LogMatsAndGoodsQuantities_CanInsert(global::LightSwitchApplication.skladDataService d)
            {
                bool result = true;
                d.LogMatsAndGoodsQuantities_CanInsert(ref result);
                return result;
            }
            private static bool __LogMatsAndGoodsQuantities_CanUpdate(global::LightSwitchApplication.skladDataService d)
            {
                bool result = true;
                d.LogMatsAndGoodsQuantities_CanUpdate(ref result);
                return result;
            }
            private static bool __LogMatsAndGoodsQuantities_CanDelete(global::LightSwitchApplication.skladDataService d)
            {
                bool result = true;
                d.LogMatsAndGoodsQuantities_CanDelete(ref result);
                return result;
            }
            private static bool __LogMatsAndGoodsQuantities_CanRead(global::LightSwitchApplication.skladDataService d)
            {
                bool result = true;
                d.LogMatsAndGoodsQuantities_CanRead(ref result);
                return result;
            }
            private static void __LogMatsAndGoodsQuantities_Inserting(global::LightSwitchApplication.skladDataService d, global::LightSwitchApplication.LogMatsAndGoodsQuantitiesItem e)
            {
                d.LogMatsAndGoodsQuantities_Inserting(e);
            }
            private static void __LogMatsAndGoodsQuantities_Inserted(global::LightSwitchApplication.skladDataService d, global::LightSwitchApplication.LogMatsAndGoodsQuantitiesItem e)
            {
                d.LogMatsAndGoodsQuantities_Inserted(e);
            }
            private static void __LogMatsAndGoodsQuantities_Updating(global::LightSwitchApplication.skladDataService d, global::LightSwitchApplication.LogMatsAndGoodsQuantitiesItem e)
            {
                d.LogMatsAndGoodsQuantities_Updating(e);
            }
            private static void __LogMatsAndGoodsQuantities_Updated(global::LightSwitchApplication.skladDataService d, global::LightSwitchApplication.LogMatsAndGoodsQuantitiesItem e)
            {
                d.LogMatsAndGoodsQuantities_Updated(e);
            }
            private static void __LogMatsAndGoodsQuantities_Deleting(global::LightSwitchApplication.skladDataService d, global::LightSwitchApplication.LogMatsAndGoodsQuantitiesItem e)
            {
                d.LogMatsAndGoodsQuantities_Deleting(e);
            }
            private static void __LogMatsAndGoodsQuantities_Deleted(global::LightSwitchApplication.skladDataService d, global::LightSwitchApplication.LogMatsAndGoodsQuantitiesItem e)
            {
                d.LogMatsAndGoodsQuantities_Deleted(e);
            }
            private static void __LogMatsAndGoodsQuantities_Validate(global::LightSwitchApplication.skladDataService d, global::LightSwitchApplication.LogMatsAndGoodsQuantitiesItem e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.LogMatsAndGoodsQuantities_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.LogMatsAndGoodsQuantitiesItem, bool>> __LogMatsAndGoodsQuantities_Filter(global::LightSwitchApplication.skladDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.LogMatsAndGoodsQuantitiesItem, bool>> filter = null;
                d.LogMatsAndGoodsQuantities_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.skladDataService, global::LightSwitchApplication.MatsAndGoodsItem>
                __MatsAndGoodsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.skladDataService, global::LightSwitchApplication.MatsAndGoodsItem>(
                    "MatsAndGoods",
                    global::LightSwitchApplication.skladDataService.DetailsClass.__MatsAndGoods_CanInsert,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__MatsAndGoods_CanUpdate,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__MatsAndGoods_CanDelete,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__MatsAndGoods_CanRead,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__MatsAndGoods_Inserting,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__MatsAndGoods_Inserted,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__MatsAndGoods_Updating,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__MatsAndGoods_Updated,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__MatsAndGoods_Deleting,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__MatsAndGoods_Deleted,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__MatsAndGoods_Validate,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__MatsAndGoods_Filter);
            private static bool __MatsAndGoods_CanInsert(global::LightSwitchApplication.skladDataService d)
            {
                bool result = true;
                d.MatsAndGoods_CanInsert(ref result);
                return result;
            }
            private static bool __MatsAndGoods_CanUpdate(global::LightSwitchApplication.skladDataService d)
            {
                bool result = true;
                d.MatsAndGoods_CanUpdate(ref result);
                return result;
            }
            private static bool __MatsAndGoods_CanDelete(global::LightSwitchApplication.skladDataService d)
            {
                bool result = true;
                d.MatsAndGoods_CanDelete(ref result);
                return result;
            }
            private static bool __MatsAndGoods_CanRead(global::LightSwitchApplication.skladDataService d)
            {
                bool result = true;
                d.MatsAndGoods_CanRead(ref result);
                return result;
            }
            private static void __MatsAndGoods_Inserting(global::LightSwitchApplication.skladDataService d, global::LightSwitchApplication.MatsAndGoodsItem e)
            {
                d.MatsAndGoods_Inserting(e);
            }
            private static void __MatsAndGoods_Inserted(global::LightSwitchApplication.skladDataService d, global::LightSwitchApplication.MatsAndGoodsItem e)
            {
                d.MatsAndGoods_Inserted(e);
            }
            private static void __MatsAndGoods_Updating(global::LightSwitchApplication.skladDataService d, global::LightSwitchApplication.MatsAndGoodsItem e)
            {
                d.MatsAndGoods_Updating(e);
            }
            private static void __MatsAndGoods_Updated(global::LightSwitchApplication.skladDataService d, global::LightSwitchApplication.MatsAndGoodsItem e)
            {
                d.MatsAndGoods_Updated(e);
            }
            private static void __MatsAndGoods_Deleting(global::LightSwitchApplication.skladDataService d, global::LightSwitchApplication.MatsAndGoodsItem e)
            {
                d.MatsAndGoods_Deleting(e);
            }
            private static void __MatsAndGoods_Deleted(global::LightSwitchApplication.skladDataService d, global::LightSwitchApplication.MatsAndGoodsItem e)
            {
                d.MatsAndGoods_Deleted(e);
            }
            private static void __MatsAndGoods_Validate(global::LightSwitchApplication.skladDataService d, global::LightSwitchApplication.MatsAndGoodsItem e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.MatsAndGoods_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.MatsAndGoodsItem, bool>> __MatsAndGoods_Filter(global::LightSwitchApplication.skladDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.MatsAndGoodsItem, bool>> filter = null;
                d.MatsAndGoods_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.skladDataService, global::LightSwitchApplication.MatsAndGoodsQuantitiesItem>
                __MatsAndGoodsQuantitiesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.skladDataService, global::LightSwitchApplication.MatsAndGoodsQuantitiesItem>(
                    "MatsAndGoodsQuantities",
                    global::LightSwitchApplication.skladDataService.DetailsClass.__MatsAndGoodsQuantities_CanInsert,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__MatsAndGoodsQuantities_CanUpdate,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__MatsAndGoodsQuantities_CanDelete,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__MatsAndGoodsQuantities_CanRead,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__MatsAndGoodsQuantities_Inserting,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__MatsAndGoodsQuantities_Inserted,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__MatsAndGoodsQuantities_Updating,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__MatsAndGoodsQuantities_Updated,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__MatsAndGoodsQuantities_Deleting,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__MatsAndGoodsQuantities_Deleted,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__MatsAndGoodsQuantities_Validate,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__MatsAndGoodsQuantities_Filter);
            private static bool __MatsAndGoodsQuantities_CanInsert(global::LightSwitchApplication.skladDataService d)
            {
                bool result = true;
                d.MatsAndGoodsQuantities_CanInsert(ref result);
                return result;
            }
            private static bool __MatsAndGoodsQuantities_CanUpdate(global::LightSwitchApplication.skladDataService d)
            {
                bool result = true;
                d.MatsAndGoodsQuantities_CanUpdate(ref result);
                return result;
            }
            private static bool __MatsAndGoodsQuantities_CanDelete(global::LightSwitchApplication.skladDataService d)
            {
                bool result = true;
                d.MatsAndGoodsQuantities_CanDelete(ref result);
                return result;
            }
            private static bool __MatsAndGoodsQuantities_CanRead(global::LightSwitchApplication.skladDataService d)
            {
                bool result = true;
                d.MatsAndGoodsQuantities_CanRead(ref result);
                return result;
            }
            private static void __MatsAndGoodsQuantities_Inserting(global::LightSwitchApplication.skladDataService d, global::LightSwitchApplication.MatsAndGoodsQuantitiesItem e)
            {
                d.MatsAndGoodsQuantities_Inserting(e);
            }
            private static void __MatsAndGoodsQuantities_Inserted(global::LightSwitchApplication.skladDataService d, global::LightSwitchApplication.MatsAndGoodsQuantitiesItem e)
            {
                d.MatsAndGoodsQuantities_Inserted(e);
            }
            private static void __MatsAndGoodsQuantities_Updating(global::LightSwitchApplication.skladDataService d, global::LightSwitchApplication.MatsAndGoodsQuantitiesItem e)
            {
                d.MatsAndGoodsQuantities_Updating(e);
            }
            private static void __MatsAndGoodsQuantities_Updated(global::LightSwitchApplication.skladDataService d, global::LightSwitchApplication.MatsAndGoodsQuantitiesItem e)
            {
                d.MatsAndGoodsQuantities_Updated(e);
            }
            private static void __MatsAndGoodsQuantities_Deleting(global::LightSwitchApplication.skladDataService d, global::LightSwitchApplication.MatsAndGoodsQuantitiesItem e)
            {
                d.MatsAndGoodsQuantities_Deleting(e);
            }
            private static void __MatsAndGoodsQuantities_Deleted(global::LightSwitchApplication.skladDataService d, global::LightSwitchApplication.MatsAndGoodsQuantitiesItem e)
            {
                d.MatsAndGoodsQuantities_Deleted(e);
            }
            private static void __MatsAndGoodsQuantities_Validate(global::LightSwitchApplication.skladDataService d, global::LightSwitchApplication.MatsAndGoodsQuantitiesItem e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.MatsAndGoodsQuantities_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.MatsAndGoodsQuantitiesItem, bool>> __MatsAndGoodsQuantities_Filter(global::LightSwitchApplication.skladDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.MatsAndGoodsQuantitiesItem, bool>> filter = null;
                d.MatsAndGoodsQuantities_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.skladDataService, global::LightSwitchApplication.RecipesItem>
                __RecipesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.skladDataService, global::LightSwitchApplication.RecipesItem>(
                    "Recipes",
                    global::LightSwitchApplication.skladDataService.DetailsClass.__Recipes_CanInsert,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__Recipes_CanUpdate,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__Recipes_CanDelete,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__Recipes_CanRead,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__Recipes_Inserting,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__Recipes_Inserted,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__Recipes_Updating,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__Recipes_Updated,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__Recipes_Deleting,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__Recipes_Deleted,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__Recipes_Validate,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__Recipes_Filter);
            private static bool __Recipes_CanInsert(global::LightSwitchApplication.skladDataService d)
            {
                bool result = true;
                d.Recipes_CanInsert(ref result);
                return result;
            }
            private static bool __Recipes_CanUpdate(global::LightSwitchApplication.skladDataService d)
            {
                bool result = true;
                d.Recipes_CanUpdate(ref result);
                return result;
            }
            private static bool __Recipes_CanDelete(global::LightSwitchApplication.skladDataService d)
            {
                bool result = true;
                d.Recipes_CanDelete(ref result);
                return result;
            }
            private static bool __Recipes_CanRead(global::LightSwitchApplication.skladDataService d)
            {
                bool result = true;
                d.Recipes_CanRead(ref result);
                return result;
            }
            private static void __Recipes_Inserting(global::LightSwitchApplication.skladDataService d, global::LightSwitchApplication.RecipesItem e)
            {
                d.Recipes_Inserting(e);
            }
            private static void __Recipes_Inserted(global::LightSwitchApplication.skladDataService d, global::LightSwitchApplication.RecipesItem e)
            {
                d.Recipes_Inserted(e);
            }
            private static void __Recipes_Updating(global::LightSwitchApplication.skladDataService d, global::LightSwitchApplication.RecipesItem e)
            {
                d.Recipes_Updating(e);
            }
            private static void __Recipes_Updated(global::LightSwitchApplication.skladDataService d, global::LightSwitchApplication.RecipesItem e)
            {
                d.Recipes_Updated(e);
            }
            private static void __Recipes_Deleting(global::LightSwitchApplication.skladDataService d, global::LightSwitchApplication.RecipesItem e)
            {
                d.Recipes_Deleting(e);
            }
            private static void __Recipes_Deleted(global::LightSwitchApplication.skladDataService d, global::LightSwitchApplication.RecipesItem e)
            {
                d.Recipes_Deleted(e);
            }
            private static void __Recipes_Validate(global::LightSwitchApplication.skladDataService d, global::LightSwitchApplication.RecipesItem e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Recipes_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.RecipesItem, bool>> __Recipes_Filter(global::LightSwitchApplication.skladDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.RecipesItem, bool>> filter = null;
                d.Recipes_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.skladDataService, global::LightSwitchApplication.RecipesComponentsItem>
                __RecipesComponentsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.skladDataService, global::LightSwitchApplication.RecipesComponentsItem>(
                    "RecipesComponents",
                    global::LightSwitchApplication.skladDataService.DetailsClass.__RecipesComponents_CanInsert,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__RecipesComponents_CanUpdate,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__RecipesComponents_CanDelete,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__RecipesComponents_CanRead,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__RecipesComponents_Inserting,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__RecipesComponents_Inserted,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__RecipesComponents_Updating,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__RecipesComponents_Updated,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__RecipesComponents_Deleting,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__RecipesComponents_Deleted,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__RecipesComponents_Validate,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__RecipesComponents_Filter);
            private static bool __RecipesComponents_CanInsert(global::LightSwitchApplication.skladDataService d)
            {
                bool result = true;
                d.RecipesComponents_CanInsert(ref result);
                return result;
            }
            private static bool __RecipesComponents_CanUpdate(global::LightSwitchApplication.skladDataService d)
            {
                bool result = true;
                d.RecipesComponents_CanUpdate(ref result);
                return result;
            }
            private static bool __RecipesComponents_CanDelete(global::LightSwitchApplication.skladDataService d)
            {
                bool result = true;
                d.RecipesComponents_CanDelete(ref result);
                return result;
            }
            private static bool __RecipesComponents_CanRead(global::LightSwitchApplication.skladDataService d)
            {
                bool result = true;
                d.RecipesComponents_CanRead(ref result);
                return result;
            }
            private static void __RecipesComponents_Inserting(global::LightSwitchApplication.skladDataService d, global::LightSwitchApplication.RecipesComponentsItem e)
            {
                d.RecipesComponents_Inserting(e);
            }
            private static void __RecipesComponents_Inserted(global::LightSwitchApplication.skladDataService d, global::LightSwitchApplication.RecipesComponentsItem e)
            {
                d.RecipesComponents_Inserted(e);
            }
            private static void __RecipesComponents_Updating(global::LightSwitchApplication.skladDataService d, global::LightSwitchApplication.RecipesComponentsItem e)
            {
                d.RecipesComponents_Updating(e);
            }
            private static void __RecipesComponents_Updated(global::LightSwitchApplication.skladDataService d, global::LightSwitchApplication.RecipesComponentsItem e)
            {
                d.RecipesComponents_Updated(e);
            }
            private static void __RecipesComponents_Deleting(global::LightSwitchApplication.skladDataService d, global::LightSwitchApplication.RecipesComponentsItem e)
            {
                d.RecipesComponents_Deleting(e);
            }
            private static void __RecipesComponents_Deleted(global::LightSwitchApplication.skladDataService d, global::LightSwitchApplication.RecipesComponentsItem e)
            {
                d.RecipesComponents_Deleted(e);
            }
            private static void __RecipesComponents_Validate(global::LightSwitchApplication.skladDataService d, global::LightSwitchApplication.RecipesComponentsItem e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.RecipesComponents_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.RecipesComponentsItem, bool>> __RecipesComponents_Filter(global::LightSwitchApplication.skladDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.RecipesComponentsItem, bool>> filter = null;
                d.RecipesComponents_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.skladDataService, global::LightSwitchApplication.ResponsibleItem>
                __ResponsibleEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.skladDataService, global::LightSwitchApplication.ResponsibleItem>(
                    "Responsible",
                    global::LightSwitchApplication.skladDataService.DetailsClass.__Responsible_CanInsert,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__Responsible_CanUpdate,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__Responsible_CanDelete,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__Responsible_CanRead,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__Responsible_Inserting,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__Responsible_Inserted,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__Responsible_Updating,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__Responsible_Updated,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__Responsible_Deleting,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__Responsible_Deleted,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__Responsible_Validate,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__Responsible_Filter);
            private static bool __Responsible_CanInsert(global::LightSwitchApplication.skladDataService d)
            {
                bool result = true;
                d.Responsible_CanInsert(ref result);
                return result;
            }
            private static bool __Responsible_CanUpdate(global::LightSwitchApplication.skladDataService d)
            {
                bool result = true;
                d.Responsible_CanUpdate(ref result);
                return result;
            }
            private static bool __Responsible_CanDelete(global::LightSwitchApplication.skladDataService d)
            {
                bool result = true;
                d.Responsible_CanDelete(ref result);
                return result;
            }
            private static bool __Responsible_CanRead(global::LightSwitchApplication.skladDataService d)
            {
                bool result = true;
                d.Responsible_CanRead(ref result);
                return result;
            }
            private static void __Responsible_Inserting(global::LightSwitchApplication.skladDataService d, global::LightSwitchApplication.ResponsibleItem e)
            {
                d.Responsible_Inserting(e);
            }
            private static void __Responsible_Inserted(global::LightSwitchApplication.skladDataService d, global::LightSwitchApplication.ResponsibleItem e)
            {
                d.Responsible_Inserted(e);
            }
            private static void __Responsible_Updating(global::LightSwitchApplication.skladDataService d, global::LightSwitchApplication.ResponsibleItem e)
            {
                d.Responsible_Updating(e);
            }
            private static void __Responsible_Updated(global::LightSwitchApplication.skladDataService d, global::LightSwitchApplication.ResponsibleItem e)
            {
                d.Responsible_Updated(e);
            }
            private static void __Responsible_Deleting(global::LightSwitchApplication.skladDataService d, global::LightSwitchApplication.ResponsibleItem e)
            {
                d.Responsible_Deleting(e);
            }
            private static void __Responsible_Deleted(global::LightSwitchApplication.skladDataService d, global::LightSwitchApplication.ResponsibleItem e)
            {
                d.Responsible_Deleted(e);
            }
            private static void __Responsible_Validate(global::LightSwitchApplication.skladDataService d, global::LightSwitchApplication.ResponsibleItem e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Responsible_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ResponsibleItem, bool>> __Responsible_Filter(global::LightSwitchApplication.skladDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ResponsibleItem, bool>> filter = null;
                d.Responsible_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.skladDataService, global::LightSwitchApplication.SkladiItem>
                __SkladiEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.skladDataService, global::LightSwitchApplication.SkladiItem>(
                    "Skladi",
                    global::LightSwitchApplication.skladDataService.DetailsClass.__Skladi_CanInsert,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__Skladi_CanUpdate,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__Skladi_CanDelete,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__Skladi_CanRead,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__Skladi_Inserting,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__Skladi_Inserted,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__Skladi_Updating,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__Skladi_Updated,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__Skladi_Deleting,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__Skladi_Deleted,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__Skladi_Validate,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__Skladi_Filter);
            private static bool __Skladi_CanInsert(global::LightSwitchApplication.skladDataService d)
            {
                bool result = true;
                d.Skladi_CanInsert(ref result);
                return result;
            }
            private static bool __Skladi_CanUpdate(global::LightSwitchApplication.skladDataService d)
            {
                bool result = true;
                d.Skladi_CanUpdate(ref result);
                return result;
            }
            private static bool __Skladi_CanDelete(global::LightSwitchApplication.skladDataService d)
            {
                bool result = true;
                d.Skladi_CanDelete(ref result);
                return result;
            }
            private static bool __Skladi_CanRead(global::LightSwitchApplication.skladDataService d)
            {
                bool result = true;
                d.Skladi_CanRead(ref result);
                return result;
            }
            private static void __Skladi_Inserting(global::LightSwitchApplication.skladDataService d, global::LightSwitchApplication.SkladiItem e)
            {
                d.Skladi_Inserting(e);
            }
            private static void __Skladi_Inserted(global::LightSwitchApplication.skladDataService d, global::LightSwitchApplication.SkladiItem e)
            {
                d.Skladi_Inserted(e);
            }
            private static void __Skladi_Updating(global::LightSwitchApplication.skladDataService d, global::LightSwitchApplication.SkladiItem e)
            {
                d.Skladi_Updating(e);
            }
            private static void __Skladi_Updated(global::LightSwitchApplication.skladDataService d, global::LightSwitchApplication.SkladiItem e)
            {
                d.Skladi_Updated(e);
            }
            private static void __Skladi_Deleting(global::LightSwitchApplication.skladDataService d, global::LightSwitchApplication.SkladiItem e)
            {
                d.Skladi_Deleting(e);
            }
            private static void __Skladi_Deleted(global::LightSwitchApplication.skladDataService d, global::LightSwitchApplication.SkladiItem e)
            {
                d.Skladi_Deleted(e);
            }
            private static void __Skladi_Validate(global::LightSwitchApplication.skladDataService d, global::LightSwitchApplication.SkladiItem e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Skladi_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.SkladiItem, bool>> __Skladi_Filter(global::LightSwitchApplication.skladDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.SkladiItem, bool>> filter = null;
                d.Skladi_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.skladDataService, global::LightSwitchApplication.SuppliersItem>
                __SuppliersEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.skladDataService, global::LightSwitchApplication.SuppliersItem>(
                    "Suppliers",
                    global::LightSwitchApplication.skladDataService.DetailsClass.__Suppliers_CanInsert,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__Suppliers_CanUpdate,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__Suppliers_CanDelete,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__Suppliers_CanRead,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__Suppliers_Inserting,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__Suppliers_Inserted,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__Suppliers_Updating,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__Suppliers_Updated,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__Suppliers_Deleting,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__Suppliers_Deleted,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__Suppliers_Validate,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__Suppliers_Filter);
            private static bool __Suppliers_CanInsert(global::LightSwitchApplication.skladDataService d)
            {
                bool result = true;
                d.Suppliers_CanInsert(ref result);
                return result;
            }
            private static bool __Suppliers_CanUpdate(global::LightSwitchApplication.skladDataService d)
            {
                bool result = true;
                d.Suppliers_CanUpdate(ref result);
                return result;
            }
            private static bool __Suppliers_CanDelete(global::LightSwitchApplication.skladDataService d)
            {
                bool result = true;
                d.Suppliers_CanDelete(ref result);
                return result;
            }
            private static bool __Suppliers_CanRead(global::LightSwitchApplication.skladDataService d)
            {
                bool result = true;
                d.Suppliers_CanRead(ref result);
                return result;
            }
            private static void __Suppliers_Inserting(global::LightSwitchApplication.skladDataService d, global::LightSwitchApplication.SuppliersItem e)
            {
                d.Suppliers_Inserting(e);
            }
            private static void __Suppliers_Inserted(global::LightSwitchApplication.skladDataService d, global::LightSwitchApplication.SuppliersItem e)
            {
                d.Suppliers_Inserted(e);
            }
            private static void __Suppliers_Updating(global::LightSwitchApplication.skladDataService d, global::LightSwitchApplication.SuppliersItem e)
            {
                d.Suppliers_Updating(e);
            }
            private static void __Suppliers_Updated(global::LightSwitchApplication.skladDataService d, global::LightSwitchApplication.SuppliersItem e)
            {
                d.Suppliers_Updated(e);
            }
            private static void __Suppliers_Deleting(global::LightSwitchApplication.skladDataService d, global::LightSwitchApplication.SuppliersItem e)
            {
                d.Suppliers_Deleting(e);
            }
            private static void __Suppliers_Deleted(global::LightSwitchApplication.skladDataService d, global::LightSwitchApplication.SuppliersItem e)
            {
                d.Suppliers_Deleted(e);
            }
            private static void __Suppliers_Validate(global::LightSwitchApplication.skladDataService d, global::LightSwitchApplication.SuppliersItem e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Suppliers_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.SuppliersItem, bool>> __Suppliers_Filter(global::LightSwitchApplication.skladDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.SuppliersItem, bool>> filter = null;
                d.Suppliers_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.skladDataService>
                __SaveChangesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.skladDataService>(
                    "SaveChanges",
                    global::LightSwitchApplication.skladDataService.DetailsClass.__SaveChanges_CanExecute,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__SaveChanges_Executing,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__SaveChanges_Executed,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__SaveChanges_Failed);
            private static bool __SaveChanges_CanExecute(global::LightSwitchApplication.skladDataService d, bool r)
            {
                d.SaveChanges_CanExecute(ref r);
                return r;
            }
            private static void __SaveChanges_Executing(global::LightSwitchApplication.skladDataService d, object[] args)
            {
                d.SaveChanges_Executing();
            }
            private static void __SaveChanges_Executed(global::LightSwitchApplication.skladDataService d, object[] args)
            {
                d.SaveChanges_Executed();
            }
            private static void __SaveChanges_Failed(global::LightSwitchApplication.skladDataService d, object[] args, global::System.Exception ex)
            {
                d.SaveChanges_ExecuteFailed(ex);
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.skladDataService, global::LightSwitchApplication.SkladiItem>
                __WorkingSkladiEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.skladDataService, global::LightSwitchApplication.SkladiItem>(
                    "WorkingSkladi",
                    global::LightSwitchApplication.skladDataService.DetailsClass.__WorkingSkladi_CanExecute,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__WorkingSkladi_Executing,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__WorkingSkladi_Executed,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__WorkingSkladi_Failed,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__WorkingSkladi_PreprocessQuery);
            private static bool __WorkingSkladi_CanExecute(global::LightSwitchApplication.skladDataService d, bool r)
            {
                d.WorkingSkladi_CanExecute(ref r);
                return r;
            }
            private static void __WorkingSkladi_Executing(global::LightSwitchApplication.skladDataService d, object[] args)
            {
                d.WorkingSkladi_Executing();
            }
            private static void __WorkingSkladi_Executed(global::LightSwitchApplication.skladDataService d, object[] args)
            {
                d.WorkingSkladi_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.SkladiItem>)args[0]);
            }
            private static void __WorkingSkladi_Failed(global::LightSwitchApplication.skladDataService d, object[] args, global::System.Exception ex)
            {
                d.WorkingSkladi_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __WorkingSkladi_PreprocessQuery(global::LightSwitchApplication.skladDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.SkladiItem> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.SkladiItem>)args[0];
                d.WorkingSkladi_PreprocessQuery(ref query);
                return query;
            }
    
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryEntry<global::LightSwitchApplication.skladDataService>
                ___QueryEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryEntry<global::LightSwitchApplication.skladDataService>(
                    global::LightSwitchApplication.skladDataService.DetailsClass.__Query_Executing,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__Query_Executed,
                    global::LightSwitchApplication.skladDataService.DetailsClass.__Query_Failed);
            private static void __Query_Executing(global::LightSwitchApplication.skladDataService d, global::Microsoft.LightSwitch.QueryExecutingDescriptor queryDescriptor)
            {
                d.Query_Executing(queryDescriptor);
            }
            private static void __Query_Executed(global::LightSwitchApplication.skladDataService d, global::Microsoft.LightSwitch.QueryExecutedDescriptor queryDescriptor)
            {
                d.Query_Executed(queryDescriptor);
            }
            private static void __Query_Failed(global::LightSwitchApplication.skladDataService d, global::Microsoft.LightSwitch.QueryExecuteFailedDescriptor queryDescriptor)
            {
                d.Query_ExecuteFailed(queryDescriptor);
            }
    
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.DatabaseAuthEntry<global::LightSwitchApplication.skladDataService>
                ___DatabaseAuthEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.DatabaseAuthEntry<global::LightSwitchApplication.skladDataService>(
                    global::LightSwitchApplication.skladDataService.DetailsClass.__skladData_InitializingConnection);
            private static void __skladData_InitializingConnection(global::LightSwitchApplication.skladDataService d, global::Microsoft.LightSwitch.DatabaseConnectionState state)
            {
                d.skladData_InitializingConnection(state);
            }
        }
    
        #endregion
    }
    
    #endregion
}
