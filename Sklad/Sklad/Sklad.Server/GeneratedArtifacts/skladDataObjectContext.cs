//------------------------------------------------------------------------------
// <auto-generated>
//    Этот код был создан из шаблона.
//
//    Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//    Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region Метаданные связи EDM

[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_ActionsFiller_Actions", "Actions", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LightSwitchApplication.Implementation.ActionsItem), "ActionsFiller", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LightSwitchApplication.Implementation.ActionsFillerItem), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_Craft_CraftAction", "CraftAction", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LightSwitchApplication.Implementation.CraftActionItem), "Craft", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LightSwitchApplication.Implementation.CraftItem), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_CraftFiller_Craft1", "CraftAction", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LightSwitchApplication.Implementation.CraftActionItem), "CraftFiller", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LightSwitchApplication.Implementation.CraftFillerItem), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_MatsAndGoodsQuantities_MatsAndGoods", "MatsAndGoods", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LightSwitchApplication.Implementation.MatsAndGoodsItem), "MatsAndGoodsQuantities", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LightSwitchApplication.Implementation.MatsAndGoodsQuantitiesItem), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_Recipes_MatsAndGoods", "MatsAndGoods", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LightSwitchApplication.Implementation.MatsAndGoodsItem), "Recipes", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LightSwitchApplication.Implementation.RecipesItem), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_RecipesComponents_MatsAndGoods", "MatsAndGoods", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LightSwitchApplication.Implementation.MatsAndGoodsItem), "RecipesComponents", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LightSwitchApplication.Implementation.RecipesComponentsItem), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_ActionsFiller_MatsAndGoods", "MatsAndGoods", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LightSwitchApplication.Implementation.MatsAndGoodsItem), "ActionsFiller", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LightSwitchApplication.Implementation.ActionsFillerItem), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_CraftFiller_MatsAndGoods", "MatsAndGoods", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LightSwitchApplication.Implementation.MatsAndGoodsItem), "CraftFiller", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LightSwitchApplication.Implementation.CraftFillerItem), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_LogActionsAndCraft_MatsAndGoods", "MatsAndGoods", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LightSwitchApplication.Implementation.MatsAndGoodsItem), "LogActionsAndCraft", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LightSwitchApplication.Implementation.LogActionsAndCraftItem), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_LogMatsAndGoodsQuantities_MatsAndGoods", "MatsAndGoods", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LightSwitchApplication.Implementation.MatsAndGoodsItem), "LogMatsAndGoodsQuantities", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LightSwitchApplication.Implementation.LogMatsAndGoodsQuantitiesItem), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_MatsAndGoodsPrices_MatsAndGoodsPrices", "MatsAndGoods", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LightSwitchApplication.Implementation.MatsAndGoodsItem), "MatsAndGoodsPrices", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LightSwitchApplication.Implementation.MatsAndGoodsPricesItem), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_RecipesComponents_Recipes", "Recipes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LightSwitchApplication.Implementation.RecipesItem), "RecipesComponents", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LightSwitchApplication.Implementation.RecipesComponentsItem), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_Craft_Recipes", "Recipes", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LightSwitchApplication.Implementation.RecipesItem), "Craft", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LightSwitchApplication.Implementation.CraftItem), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_CraftAction_Responsible", "Responsible", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LightSwitchApplication.Implementation.ResponsibleItem), "CraftAction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LightSwitchApplication.Implementation.CraftActionItem), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_Actions_Skladi", "Skladi", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LightSwitchApplication.Implementation.SkladiItem), "Actions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LightSwitchApplication.Implementation.ActionsItem), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_Actions_Skladi1", "Skladi", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LightSwitchApplication.Implementation.SkladiItem), "Actions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LightSwitchApplication.Implementation.ActionsItem), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_MatsAndGoodsQuantities_Skladi", "Skladi", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LightSwitchApplication.Implementation.SkladiItem), "MatsAndGoodsQuantities", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LightSwitchApplication.Implementation.MatsAndGoodsQuantitiesItem), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_CraftAction_Skladi", "Skladi", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LightSwitchApplication.Implementation.SkladiItem), "CraftAction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LightSwitchApplication.Implementation.CraftActionItem), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_Responsible_Skladi", "Skladi", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LightSwitchApplication.Implementation.SkladiItem), "Responsible", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LightSwitchApplication.Implementation.ResponsibleItem), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_LogMatsAndGoodsQuantities_Skladi", "Skladi", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LightSwitchApplication.Implementation.SkladiItem), "LogMatsAndGoodsQuantities", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LightSwitchApplication.Implementation.LogMatsAndGoodsQuantitiesItem), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_LogActionsAndCraft_LogActionsAndCraft1", "Skladi", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LightSwitchApplication.Implementation.SkladiItem), "LogActionsAndCraft", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LightSwitchApplication.Implementation.LogActionsAndCraftItem), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_Actions_Suppliers", "Suppliers", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LightSwitchApplication.Implementation.SuppliersItem), "Actions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LightSwitchApplication.Implementation.ActionsItem), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_MatsAndGoodsPrices_Suppliers", "Suppliers", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LightSwitchApplication.Implementation.SuppliersItem), "MatsAndGoodsPrices", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LightSwitchApplication.Implementation.MatsAndGoodsPricesItem), true)]

#endregion

namespace LightSwitchApplication.Implementation
{
    #region Контексты
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    public partial class skladData : ObjectContext
    {
        #region Конструкторы
    
        /// <summary>
        /// Инициализирует новый объект skladData, используя строку соединения из раздела "skladData" файла конфигурации приложения.
        /// </summary>
        public skladData() : base("name=skladData", "skladData")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта skladData.
        /// </summary>
        public skladData(string connectionString) : base(connectionString, "skladData")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта skladData.
        /// </summary>
        public skladData(EntityConnection connection) : base(connection, "skladData")
        {
            OnContextCreated();
        }
    
        #endregion
    
        #region Разделяемые методы
    
        partial void OnContextCreated();
    
        #endregion
    
        #region Свойства ObjectSet
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<ActionsItem> Actions
        {
            get
            {
                if ((_Actions == null))
                {
                    _Actions = base.CreateObjectSet<ActionsItem>("Actions");
                }
                return _Actions;
            }
        }
        private ObjectSet<ActionsItem> _Actions;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<ActionsFillerItem> ActionsFiller
        {
            get
            {
                if ((_ActionsFiller == null))
                {
                    _ActionsFiller = base.CreateObjectSet<ActionsFillerItem>("ActionsFiller");
                }
                return _ActionsFiller;
            }
        }
        private ObjectSet<ActionsFillerItem> _ActionsFiller;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<CraftItem> Craft
        {
            get
            {
                if ((_Craft == null))
                {
                    _Craft = base.CreateObjectSet<CraftItem>("Craft");
                }
                return _Craft;
            }
        }
        private ObjectSet<CraftItem> _Craft;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<CraftActionItem> CraftAction
        {
            get
            {
                if ((_CraftAction == null))
                {
                    _CraftAction = base.CreateObjectSet<CraftActionItem>("CraftAction");
                }
                return _CraftAction;
            }
        }
        private ObjectSet<CraftActionItem> _CraftAction;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<CraftFillerItem> CraftFiller
        {
            get
            {
                if ((_CraftFiller == null))
                {
                    _CraftFiller = base.CreateObjectSet<CraftFillerItem>("CraftFiller");
                }
                return _CraftFiller;
            }
        }
        private ObjectSet<CraftFillerItem> _CraftFiller;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<LogActionsAndCraftItem> LogActionsAndCraft
        {
            get
            {
                if ((_LogActionsAndCraft == null))
                {
                    _LogActionsAndCraft = base.CreateObjectSet<LogActionsAndCraftItem>("LogActionsAndCraft");
                }
                return _LogActionsAndCraft;
            }
        }
        private ObjectSet<LogActionsAndCraftItem> _LogActionsAndCraft;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<LogMatsAndGoodsQuantitiesItem> LogMatsAndGoodsQuantities
        {
            get
            {
                if ((_LogMatsAndGoodsQuantities == null))
                {
                    _LogMatsAndGoodsQuantities = base.CreateObjectSet<LogMatsAndGoodsQuantitiesItem>("LogMatsAndGoodsQuantities");
                }
                return _LogMatsAndGoodsQuantities;
            }
        }
        private ObjectSet<LogMatsAndGoodsQuantitiesItem> _LogMatsAndGoodsQuantities;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<MatsAndGoodsItem> MatsAndGoods
        {
            get
            {
                if ((_MatsAndGoods == null))
                {
                    _MatsAndGoods = base.CreateObjectSet<MatsAndGoodsItem>("MatsAndGoods");
                }
                return _MatsAndGoods;
            }
        }
        private ObjectSet<MatsAndGoodsItem> _MatsAndGoods;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<MatsAndGoodsPricesItem> MatsAndGoodsPrices
        {
            get
            {
                if ((_MatsAndGoodsPrices == null))
                {
                    _MatsAndGoodsPrices = base.CreateObjectSet<MatsAndGoodsPricesItem>("MatsAndGoodsPrices");
                }
                return _MatsAndGoodsPrices;
            }
        }
        private ObjectSet<MatsAndGoodsPricesItem> _MatsAndGoodsPrices;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<MatsAndGoodsQuantitiesItem> MatsAndGoodsQuantities
        {
            get
            {
                if ((_MatsAndGoodsQuantities == null))
                {
                    _MatsAndGoodsQuantities = base.CreateObjectSet<MatsAndGoodsQuantitiesItem>("MatsAndGoodsQuantities");
                }
                return _MatsAndGoodsQuantities;
            }
        }
        private ObjectSet<MatsAndGoodsQuantitiesItem> _MatsAndGoodsQuantities;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<RecipesItem> Recipes
        {
            get
            {
                if ((_Recipes == null))
                {
                    _Recipes = base.CreateObjectSet<RecipesItem>("Recipes");
                }
                return _Recipes;
            }
        }
        private ObjectSet<RecipesItem> _Recipes;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<RecipesComponentsItem> RecipesComponents
        {
            get
            {
                if ((_RecipesComponents == null))
                {
                    _RecipesComponents = base.CreateObjectSet<RecipesComponentsItem>("RecipesComponents");
                }
                return _RecipesComponents;
            }
        }
        private ObjectSet<RecipesComponentsItem> _RecipesComponents;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<ResponsibleItem> Responsible
        {
            get
            {
                if ((_Responsible == null))
                {
                    _Responsible = base.CreateObjectSet<ResponsibleItem>("Responsible");
                }
                return _Responsible;
            }
        }
        private ObjectSet<ResponsibleItem> _Responsible;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<SkladiItem> Skladi
        {
            get
            {
                if ((_Skladi == null))
                {
                    _Skladi = base.CreateObjectSet<SkladiItem>("Skladi");
                }
                return _Skladi;
            }
        }
        private ObjectSet<SkladiItem> _Skladi;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<SuppliersItem> Suppliers
        {
            get
            {
                if ((_Suppliers == null))
                {
                    _Suppliers = base.CreateObjectSet<SuppliersItem>("Suppliers");
                }
                return _Suppliers;
            }
        }
        private ObjectSet<SuppliersItem> _Suppliers;

        #endregion

        #region Методы AddTo
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Actions. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToActions(ActionsItem actionsItem)
        {
            base.AddObject("Actions", actionsItem);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet ActionsFiller. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToActionsFiller(ActionsFillerItem actionsFillerItem)
        {
            base.AddObject("ActionsFiller", actionsFillerItem);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Craft. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToCraft(CraftItem craftItem)
        {
            base.AddObject("Craft", craftItem);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet CraftAction. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToCraftAction(CraftActionItem craftActionItem)
        {
            base.AddObject("CraftAction", craftActionItem);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet CraftFiller. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToCraftFiller(CraftFillerItem craftFillerItem)
        {
            base.AddObject("CraftFiller", craftFillerItem);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet LogActionsAndCraft. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToLogActionsAndCraft(LogActionsAndCraftItem logActionsAndCraftItem)
        {
            base.AddObject("LogActionsAndCraft", logActionsAndCraftItem);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet LogMatsAndGoodsQuantities. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToLogMatsAndGoodsQuantities(LogMatsAndGoodsQuantitiesItem logMatsAndGoodsQuantitiesItem)
        {
            base.AddObject("LogMatsAndGoodsQuantities", logMatsAndGoodsQuantitiesItem);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet MatsAndGoods. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToMatsAndGoods(MatsAndGoodsItem matsAndGoodsItem)
        {
            base.AddObject("MatsAndGoods", matsAndGoodsItem);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet MatsAndGoodsPrices. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToMatsAndGoodsPrices(MatsAndGoodsPricesItem matsAndGoodsPricesItem)
        {
            base.AddObject("MatsAndGoodsPrices", matsAndGoodsPricesItem);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet MatsAndGoodsQuantities. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToMatsAndGoodsQuantities(MatsAndGoodsQuantitiesItem matsAndGoodsQuantitiesItem)
        {
            base.AddObject("MatsAndGoodsQuantities", matsAndGoodsQuantitiesItem);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Recipes. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToRecipes(RecipesItem recipesItem)
        {
            base.AddObject("Recipes", recipesItem);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet RecipesComponents. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToRecipesComponents(RecipesComponentsItem recipesComponentsItem)
        {
            base.AddObject("RecipesComponents", recipesComponentsItem);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Responsible. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToResponsible(ResponsibleItem responsibleItem)
        {
            base.AddObject("Responsible", responsibleItem);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Skladi. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToSkladi(SkladiItem skladiItem)
        {
            base.AddObject("Skladi", skladiItem);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Suppliers. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToSuppliers(SuppliersItem suppliersItem)
        {
            base.AddObject("Suppliers", suppliersItem);
        }

        #endregion

    }

    #endregion

    #region Сущности
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="ActionsFillerItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ActionsFillerItem : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта ActionsFillerItem.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        /// <param name="quantity">Исходное значение свойства Quantity.</param>
        /// <param name="mAGID">Исходное значение свойства MAGID.</param>
        public static ActionsFillerItem CreateActionsFillerItem(global::System.Decimal id, global::System.Decimal quantity, global::System.Decimal mAGID)
        {
            ActionsFillerItem actionsFillerItem = new ActionsFillerItem();
            actionsFillerItem.ID = id;
            actionsFillerItem.Quantity = quantity;
            actionsFillerItem.MAGID = mAGID;
            return actionsFillerItem;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = value;
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Decimal _ID;
        partial void OnIDChanging(global::System.Decimal value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = value;
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Decimal _Quantity;
        partial void OnQuantityChanging(global::System.Decimal value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ActionID
        {
            get
            {
                return _ActionID;
            }
            set
            {
                OnActionIDChanging(value);
                ReportPropertyChanging("ActionID");
                _ActionID = value;
                ReportPropertyChanged("ActionID");
                OnActionIDChanged();
            }
        }
        private Nullable<global::System.Decimal> _ActionID;
        partial void OnActionIDChanging(Nullable<global::System.Decimal> value);
        partial void OnActionIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal MAGID
        {
            get
            {
                return _MAGID;
            }
            set
            {
                OnMAGIDChanging(value);
                ReportPropertyChanging("MAGID");
                _MAGID = value;
                ReportPropertyChanged("MAGID");
                OnMAGIDChanged();
            }
        }
        private global::System.Decimal _MAGID;
        partial void OnMAGIDChanging(global::System.Decimal value);
        partial void OnMAGIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> PricePerUnit
        {
            get
            {
                return _PricePerUnit;
            }
            set
            {
                OnPricePerUnitChanging(value);
                ReportPropertyChanging("PricePerUnit");
                _PricePerUnit = value;
                ReportPropertyChanged("PricePerUnit");
                OnPricePerUnitChanged();
            }
        }
        private Nullable<global::System.Decimal> _PricePerUnit;
        partial void OnPricePerUnitChanging(Nullable<global::System.Decimal> value);
        partial void OnPricePerUnitChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> PriceTotal
        {
            get
            {
                return _PriceTotal;
            }
            set
            {
                OnPriceTotalChanging(value);
                ReportPropertyChanging("PriceTotal");
                _PriceTotal = value;
                ReportPropertyChanged("PriceTotal");
                OnPriceTotalChanged();
            }
        }
        private Nullable<global::System.Decimal> _PriceTotal;
        partial void OnPriceTotalChanging(Nullable<global::System.Decimal> value);
        partial void OnPriceTotalChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Quantity1
        {
            get
            {
                return _Quantity1;
            }
            set
            {
                OnQuantity1Changing(value);
                ReportPropertyChanging("Quantity1");
                _Quantity1 = value;
                ReportPropertyChanged("Quantity1");
                OnQuantity1Changed();
            }
        }
        private Nullable<global::System.Decimal> _Quantity1;
        partial void OnQuantity1Changing(Nullable<global::System.Decimal> value);
        partial void OnQuantity1Changed();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Quantity2
        {
            get
            {
                return _Quantity2;
            }
            set
            {
                OnQuantity2Changing(value);
                ReportPropertyChanging("Quantity2");
                _Quantity2 = value;
                ReportPropertyChanged("Quantity2");
                OnQuantity2Changed();
            }
        }
        private Nullable<global::System.Decimal> _Quantity2;
        partial void OnQuantity2Changing(Nullable<global::System.Decimal> value);
        partial void OnQuantity2Changed();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_ActionsFiller_Actions", "Actions")]
        public ActionsItem ActionsItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ActionsItem>("LightSwitchApplication.FK_ActionsFiller_Actions", "Actions").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ActionsItem>("LightSwitchApplication.FK_ActionsFiller_Actions", "Actions").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ActionsItem> ActionsItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ActionsItem>("LightSwitchApplication.FK_ActionsFiller_Actions", "Actions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ActionsItem>("LightSwitchApplication.FK_ActionsFiller_Actions", "Actions", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_ActionsFiller_MatsAndGoods", "MatsAndGoods")]
        public MatsAndGoodsItem MatsAndGoodsItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MatsAndGoodsItem>("LightSwitchApplication.FK_ActionsFiller_MatsAndGoods", "MatsAndGoods").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MatsAndGoodsItem>("LightSwitchApplication.FK_ActionsFiller_MatsAndGoods", "MatsAndGoods").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MatsAndGoodsItem> MatsAndGoodsItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MatsAndGoodsItem>("LightSwitchApplication.FK_ActionsFiller_MatsAndGoods", "MatsAndGoods");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MatsAndGoodsItem>("LightSwitchApplication.FK_ActionsFiller_MatsAndGoods", "MatsAndGoods", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="ActionsItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ActionsItem : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта ActionsItem.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        /// <param name="creationDate">Исходное значение свойства CreationDate.</param>
        /// <param name="realTimeCreationDate">Исходное значение свойства RealTimeCreationDate.</param>
        public static ActionsItem CreateActionsItem(global::System.Decimal id, global::System.DateTime creationDate, global::System.DateTime realTimeCreationDate)
        {
            ActionsItem actionsItem = new ActionsItem();
            actionsItem.ID = id;
            actionsItem.CreationDate = creationDate;
            actionsItem.RealTimeCreationDate = realTimeCreationDate;
            return actionsItem;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = value;
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Decimal _ID;
        partial void OnIDChanging(global::System.Decimal value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Action
        {
            get
            {
                return _Action;
            }
            set
            {
                OnActionChanging(value);
                ReportPropertyChanging("Action");
                _Action = value;
                ReportPropertyChanged("Action");
                OnActionChanged();
            }
        }
        private global::System.String _Action;
        partial void OnActionChanging(global::System.String value);
        partial void OnActionChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreationDate
        {
            get
            {
                return _CreationDate;
            }
            set
            {
                OnCreationDateChanging(value);
                ReportPropertyChanging("CreationDate");
                _CreationDate = value;
                ReportPropertyChanged("CreationDate");
                OnCreationDateChanged();
            }
        }
        private global::System.DateTime _CreationDate;
        partial void OnCreationDateChanging(global::System.DateTime value);
        partial void OnCreationDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> RealiationDate
        {
            get
            {
                return _RealiationDate;
            }
            set
            {
                OnRealiationDateChanging(value);
                ReportPropertyChanging("RealiationDate");
                _RealiationDate = value;
                ReportPropertyChanged("RealiationDate");
                OnRealiationDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _RealiationDate;
        partial void OnRealiationDateChanging(Nullable<global::System.DateTime> value);
        partial void OnRealiationDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime RealTimeCreationDate
        {
            get
            {
                return _RealTimeCreationDate;
            }
            set
            {
                OnRealTimeCreationDateChanging(value);
                ReportPropertyChanging("RealTimeCreationDate");
                _RealTimeCreationDate = value;
                ReportPropertyChanged("RealTimeCreationDate");
                OnRealTimeCreationDateChanged();
            }
        }
        private global::System.DateTime _RealTimeCreationDate;
        partial void OnRealTimeCreationDateChanging(global::System.DateTime value);
        partial void OnRealTimeCreationDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Note
        {
            get
            {
                return _Note;
            }
            set
            {
                OnNoteChanging(value);
                ReportPropertyChanging("Note");
                _Note = value;
                ReportPropertyChanged("Note");
                OnNoteChanged();
            }
        }
        private global::System.String _Note;
        partial void OnNoteChanging(global::System.String value);
        partial void OnNoteChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> FromSkladID
        {
            get
            {
                return _FromSkladID;
            }
            set
            {
                OnFromSkladIDChanging(value);
                ReportPropertyChanging("FromSkladID");
                _FromSkladID = value;
                ReportPropertyChanged("FromSkladID");
                OnFromSkladIDChanged();
            }
        }
        private Nullable<global::System.Decimal> _FromSkladID;
        partial void OnFromSkladIDChanging(Nullable<global::System.Decimal> value);
        partial void OnFromSkladIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ToSkladID
        {
            get
            {
                return _ToSkladID;
            }
            set
            {
                OnToSkladIDChanging(value);
                ReportPropertyChanging("ToSkladID");
                _ToSkladID = value;
                ReportPropertyChanged("ToSkladID");
                OnToSkladIDChanged();
            }
        }
        private Nullable<global::System.Decimal> _ToSkladID;
        partial void OnToSkladIDChanging(Nullable<global::System.Decimal> value);
        partial void OnToSkladIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> SupplierID
        {
            get
            {
                return _SupplierID;
            }
            set
            {
                OnSupplierIDChanging(value);
                ReportPropertyChanging("SupplierID");
                _SupplierID = value;
                ReportPropertyChanged("SupplierID");
                OnSupplierIDChanged();
            }
        }
        private Nullable<global::System.Decimal> _SupplierID;
        partial void OnSupplierIDChanging(Nullable<global::System.Decimal> value);
        partial void OnSupplierIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = value;
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = value;
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _Price;
        partial void OnPriceChanging(Nullable<global::System.Decimal> value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Number
        {
            get
            {
                return _Number;
            }
            set
            {
                OnNumberChanging(value);
                ReportPropertyChanging("Number");
                _Number = value;
                ReportPropertyChanged("Number");
                OnNumberChanged();
            }
        }
        private global::System.String _Number;
        partial void OnNumberChanging(global::System.String value);
        partial void OnNumberChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Actions_Skladi", "Skladi")]
        public SkladiItem SkladiItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SkladiItem>("LightSwitchApplication.FK_Actions_Skladi", "Skladi").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SkladiItem>("LightSwitchApplication.FK_Actions_Skladi", "Skladi").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SkladiItem> SkladiItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SkladiItem>("LightSwitchApplication.FK_Actions_Skladi", "Skladi");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SkladiItem>("LightSwitchApplication.FK_Actions_Skladi", "Skladi", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Actions_Skladi1", "Skladi")]
        public SkladiItem SkladiItem1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SkladiItem>("LightSwitchApplication.FK_Actions_Skladi1", "Skladi").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SkladiItem>("LightSwitchApplication.FK_Actions_Skladi1", "Skladi").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SkladiItem> SkladiItem1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SkladiItem>("LightSwitchApplication.FK_Actions_Skladi1", "Skladi");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SkladiItem>("LightSwitchApplication.FK_Actions_Skladi1", "Skladi", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Actions_Suppliers", "Suppliers")]
        public SuppliersItem SuppliersItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SuppliersItem>("LightSwitchApplication.FK_Actions_Suppliers", "Suppliers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SuppliersItem>("LightSwitchApplication.FK_Actions_Suppliers", "Suppliers").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SuppliersItem> SuppliersItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SuppliersItem>("LightSwitchApplication.FK_Actions_Suppliers", "Suppliers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SuppliersItem>("LightSwitchApplication.FK_Actions_Suppliers", "Suppliers", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_ActionsFiller_Actions", "ActionsFiller")]
        public EntityCollection<ActionsFillerItem> ActionsFiller
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ActionsFillerItem>("LightSwitchApplication.FK_ActionsFiller_Actions", "ActionsFiller");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ActionsFillerItem>("LightSwitchApplication.FK_ActionsFiller_Actions", "ActionsFiller", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="CraftActionItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CraftActionItem : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта CraftActionItem.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        /// <param name="status">Исходное значение свойства Status.</param>
        /// <param name="skladID">Исходное значение свойства SkladID.</param>
        /// <param name="dateCreation">Исходное значение свойства DateCreation.</param>
        /// <param name="realTimeCreationDate">Исходное значение свойства RealTimeCreationDate.</param>
        public static CraftActionItem CreateCraftActionItem(global::System.Decimal id, global::System.String status, global::System.Decimal skladID, global::System.DateTime dateCreation, global::System.DateTime realTimeCreationDate)
        {
            CraftActionItem craftActionItem = new CraftActionItem();
            craftActionItem.ID = id;
            craftActionItem.Status = status;
            craftActionItem.SkladID = skladID;
            craftActionItem.DateCreation = dateCreation;
            craftActionItem.RealTimeCreationDate = realTimeCreationDate;
            return craftActionItem;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = value;
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Decimal _ID;
        partial void OnIDChanging(global::System.Decimal value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Note
        {
            get
            {
                return _Note;
            }
            set
            {
                OnNoteChanging(value);
                ReportPropertyChanging("Note");
                _Note = value;
                ReportPropertyChanged("Note");
                OnNoteChanged();
            }
        }
        private global::System.String _Note;
        partial void OnNoteChanging(global::System.String value);
        partial void OnNoteChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = value;
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal SkladID
        {
            get
            {
                return _SkladID;
            }
            set
            {
                OnSkladIDChanging(value);
                ReportPropertyChanging("SkladID");
                _SkladID = value;
                ReportPropertyChanged("SkladID");
                OnSkladIDChanged();
            }
        }
        private global::System.Decimal _SkladID;
        partial void OnSkladIDChanging(global::System.Decimal value);
        partial void OnSkladIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreation
        {
            get
            {
                return _DateCreation;
            }
            set
            {
                OnDateCreationChanging(value);
                ReportPropertyChanging("DateCreation");
                _DateCreation = value;
                ReportPropertyChanged("DateCreation");
                OnDateCreationChanged();
            }
        }
        private global::System.DateTime _DateCreation;
        partial void OnDateCreationChanging(global::System.DateTime value);
        partial void OnDateCreationChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateRealisation
        {
            get
            {
                return _DateRealisation;
            }
            set
            {
                OnDateRealisationChanging(value);
                ReportPropertyChanging("DateRealisation");
                _DateRealisation = value;
                ReportPropertyChanged("DateRealisation");
                OnDateRealisationChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateRealisation;
        partial void OnDateRealisationChanging(Nullable<global::System.DateTime> value);
        partial void OnDateRealisationChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime RealTimeCreationDate
        {
            get
            {
                return _RealTimeCreationDate;
            }
            set
            {
                OnRealTimeCreationDateChanging(value);
                ReportPropertyChanging("RealTimeCreationDate");
                _RealTimeCreationDate = value;
                ReportPropertyChanged("RealTimeCreationDate");
                OnRealTimeCreationDateChanged();
            }
        }
        private global::System.DateTime _RealTimeCreationDate;
        partial void OnRealTimeCreationDateChanging(global::System.DateTime value);
        partial void OnRealTimeCreationDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ResponsibleID
        {
            get
            {
                return _ResponsibleID;
            }
            set
            {
                OnResponsibleIDChanging(value);
                ReportPropertyChanging("ResponsibleID");
                _ResponsibleID = value;
                ReportPropertyChanged("ResponsibleID");
                OnResponsibleIDChanged();
            }
        }
        private Nullable<global::System.Decimal> _ResponsibleID;
        partial void OnResponsibleIDChanging(Nullable<global::System.Decimal> value);
        partial void OnResponsibleIDChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Craft_CraftAction", "Craft")]
        public EntityCollection<CraftItem> Craft
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CraftItem>("LightSwitchApplication.FK_Craft_CraftAction", "Craft");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CraftItem>("LightSwitchApplication.FK_Craft_CraftAction", "Craft", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_CraftFiller_Craft1", "CraftFiller")]
        public EntityCollection<CraftFillerItem> CraftFiller
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CraftFillerItem>("LightSwitchApplication.FK_CraftFiller_Craft1", "CraftFiller");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CraftFillerItem>("LightSwitchApplication.FK_CraftFiller_Craft1", "CraftFiller", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_CraftAction_Skladi", "Skladi")]
        public SkladiItem SkladiItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SkladiItem>("LightSwitchApplication.FK_CraftAction_Skladi", "Skladi").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SkladiItem>("LightSwitchApplication.FK_CraftAction_Skladi", "Skladi").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SkladiItem> SkladiItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SkladiItem>("LightSwitchApplication.FK_CraftAction_Skladi", "Skladi");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SkladiItem>("LightSwitchApplication.FK_CraftAction_Skladi", "Skladi", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_CraftAction_Responsible", "Responsible")]
        public ResponsibleItem ResponsibleItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResponsibleItem>("LightSwitchApplication.FK_CraftAction_Responsible", "Responsible").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResponsibleItem>("LightSwitchApplication.FK_CraftAction_Responsible", "Responsible").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ResponsibleItem> ResponsibleItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResponsibleItem>("LightSwitchApplication.FK_CraftAction_Responsible", "Responsible");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ResponsibleItem>("LightSwitchApplication.FK_CraftAction_Responsible", "Responsible", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="CraftFillerItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CraftFillerItem : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта CraftFillerItem.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        public static CraftFillerItem CreateCraftFillerItem(global::System.Decimal id)
        {
            CraftFillerItem craftFillerItem = new CraftFillerItem();
            craftFillerItem.ID = id;
            return craftFillerItem;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = value;
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Decimal _ID;
        partial void OnIDChanging(global::System.Decimal value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = value;
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private Nullable<global::System.Decimal> _Quantity;
        partial void OnQuantityChanging(Nullable<global::System.Decimal> value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> MAGID
        {
            get
            {
                return _MAGID;
            }
            set
            {
                OnMAGIDChanging(value);
                ReportPropertyChanging("MAGID");
                _MAGID = value;
                ReportPropertyChanged("MAGID");
                OnMAGIDChanged();
            }
        }
        private Nullable<global::System.Decimal> _MAGID;
        partial void OnMAGIDChanging(Nullable<global::System.Decimal> value);
        partial void OnMAGIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> CraftID
        {
            get
            {
                return _CraftID;
            }
            set
            {
                OnCraftIDChanging(value);
                ReportPropertyChanging("CraftID");
                _CraftID = value;
                ReportPropertyChanged("CraftID");
                OnCraftIDChanged();
            }
        }
        private Nullable<global::System.Decimal> _CraftID;
        partial void OnCraftIDChanging(Nullable<global::System.Decimal> value);
        partial void OnCraftIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Quantity1
        {
            get
            {
                return _Quantity1;
            }
            set
            {
                OnQuantity1Changing(value);
                ReportPropertyChanging("Quantity1");
                _Quantity1 = value;
                ReportPropertyChanged("Quantity1");
                OnQuantity1Changed();
            }
        }
        private Nullable<global::System.Decimal> _Quantity1;
        partial void OnQuantity1Changing(Nullable<global::System.Decimal> value);
        partial void OnQuantity1Changed();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Quantity2
        {
            get
            {
                return _Quantity2;
            }
            set
            {
                OnQuantity2Changing(value);
                ReportPropertyChanging("Quantity2");
                _Quantity2 = value;
                ReportPropertyChanged("Quantity2");
                OnQuantity2Changed();
            }
        }
        private Nullable<global::System.Decimal> _Quantity2;
        partial void OnQuantity2Changing(Nullable<global::System.Decimal> value);
        partial void OnQuantity2Changed();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_CraftFiller_MatsAndGoods", "MatsAndGoods")]
        public MatsAndGoodsItem MatsAndGoodsItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MatsAndGoodsItem>("LightSwitchApplication.FK_CraftFiller_MatsAndGoods", "MatsAndGoods").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MatsAndGoodsItem>("LightSwitchApplication.FK_CraftFiller_MatsAndGoods", "MatsAndGoods").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MatsAndGoodsItem> MatsAndGoodsItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MatsAndGoodsItem>("LightSwitchApplication.FK_CraftFiller_MatsAndGoods", "MatsAndGoods");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MatsAndGoodsItem>("LightSwitchApplication.FK_CraftFiller_MatsAndGoods", "MatsAndGoods", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_CraftFiller_Craft1", "CraftAction")]
        public CraftActionItem CraftActionItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CraftActionItem>("LightSwitchApplication.FK_CraftFiller_Craft1", "CraftAction").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CraftActionItem>("LightSwitchApplication.FK_CraftFiller_Craft1", "CraftAction").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CraftActionItem> CraftActionItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CraftActionItem>("LightSwitchApplication.FK_CraftFiller_Craft1", "CraftAction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CraftActionItem>("LightSwitchApplication.FK_CraftFiller_Craft1", "CraftAction", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="CraftItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CraftItem : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта CraftItem.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        public static CraftItem CreateCraftItem(global::System.Decimal id)
        {
            CraftItem craftItem = new CraftItem();
            craftItem.ID = id;
            return craftItem;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = value;
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Decimal _ID;
        partial void OnIDChanging(global::System.Decimal value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = value;
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private Nullable<global::System.Decimal> _Quantity;
        partial void OnQuantityChanging(Nullable<global::System.Decimal> value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> RecipeID
        {
            get
            {
                return _RecipeID;
            }
            set
            {
                OnRecipeIDChanging(value);
                ReportPropertyChanging("RecipeID");
                _RecipeID = value;
                ReportPropertyChanged("RecipeID");
                OnRecipeIDChanged();
            }
        }
        private Nullable<global::System.Decimal> _RecipeID;
        partial void OnRecipeIDChanging(Nullable<global::System.Decimal> value);
        partial void OnRecipeIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> CraftID
        {
            get
            {
                return _CraftID;
            }
            set
            {
                OnCraftIDChanging(value);
                ReportPropertyChanging("CraftID");
                _CraftID = value;
                ReportPropertyChanged("CraftID");
                OnCraftIDChanged();
            }
        }
        private Nullable<global::System.Decimal> _CraftID;
        partial void OnCraftIDChanging(Nullable<global::System.Decimal> value);
        partial void OnCraftIDChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Craft_Recipes", "Recipes")]
        public RecipesItem RecipesItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RecipesItem>("LightSwitchApplication.FK_Craft_Recipes", "Recipes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RecipesItem>("LightSwitchApplication.FK_Craft_Recipes", "Recipes").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RecipesItem> RecipesItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RecipesItem>("LightSwitchApplication.FK_Craft_Recipes", "Recipes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RecipesItem>("LightSwitchApplication.FK_Craft_Recipes", "Recipes", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Craft_CraftAction", "CraftAction")]
        public CraftActionItem CraftActionItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CraftActionItem>("LightSwitchApplication.FK_Craft_CraftAction", "CraftAction").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CraftActionItem>("LightSwitchApplication.FK_Craft_CraftAction", "CraftAction").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CraftActionItem> CraftActionItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CraftActionItem>("LightSwitchApplication.FK_Craft_CraftAction", "CraftAction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CraftActionItem>("LightSwitchApplication.FK_Craft_CraftAction", "CraftAction", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="LogActionsAndCraftItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LogActionsAndCraftItem : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта LogActionsAndCraftItem.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        public static LogActionsAndCraftItem CreateLogActionsAndCraftItem(global::System.Decimal id)
        {
            LogActionsAndCraftItem logActionsAndCraftItem = new LogActionsAndCraftItem();
            logActionsAndCraftItem.ID = id;
            return logActionsAndCraftItem;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = value;
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Decimal _ID;
        partial void OnIDChanging(global::System.Decimal value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> c_Date
        {
            get
            {
                return _c_Date;
            }
            set
            {
                Onc_DateChanging(value);
                ReportPropertyChanging("c_Date");
                _c_Date = value;
                ReportPropertyChanged("c_Date");
                Onc_DateChanged();
            }
        }
        private Nullable<global::System.DateTime> _c_Date;
        partial void Onc_DateChanging(Nullable<global::System.DateTime> value);
        partial void Onc_DateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Action
        {
            get
            {
                return _Action;
            }
            set
            {
                OnActionChanging(value);
                ReportPropertyChanging("Action");
                _Action = value;
                ReportPropertyChanged("Action");
                OnActionChanged();
            }
        }
        private global::System.String _Action;
        partial void OnActionChanging(global::System.String value);
        partial void OnActionChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String WayBillNumber
        {
            get
            {
                return _WayBillNumber;
            }
            set
            {
                OnWayBillNumberChanging(value);
                ReportPropertyChanging("WayBillNumber");
                _WayBillNumber = value;
                ReportPropertyChanged("WayBillNumber");
                OnWayBillNumberChanged();
            }
        }
        private global::System.String _WayBillNumber;
        partial void OnWayBillNumberChanging(global::System.String value);
        partial void OnWayBillNumberChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = value;
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private Nullable<global::System.Decimal> _Quantity;
        partial void OnQuantityChanging(Nullable<global::System.Decimal> value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> QuantityOnSklad
        {
            get
            {
                return _QuantityOnSklad;
            }
            set
            {
                OnQuantityOnSkladChanging(value);
                ReportPropertyChanging("QuantityOnSklad");
                _QuantityOnSklad = value;
                ReportPropertyChanged("QuantityOnSklad");
                OnQuantityOnSkladChanged();
            }
        }
        private Nullable<global::System.Decimal> _QuantityOnSklad;
        partial void OnQuantityOnSkladChanging(Nullable<global::System.Decimal> value);
        partial void OnQuantityOnSkladChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> MatsAndGoodsItem
        {
            get
            {
                return _MatsAndGoodsItem;
            }
            set
            {
                OnMatsAndGoodsItemChanging(value);
                ReportPropertyChanging("MatsAndGoodsItem");
                _MatsAndGoodsItem = value;
                ReportPropertyChanged("MatsAndGoodsItem");
                OnMatsAndGoodsItemChanged();
            }
        }
        private Nullable<global::System.Decimal> _MatsAndGoodsItem;
        partial void OnMatsAndGoodsItemChanging(Nullable<global::System.Decimal> value);
        partial void OnMatsAndGoodsItemChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Sklad
        {
            get
            {
                return _Sklad;
            }
            set
            {
                OnSkladChanging(value);
                ReportPropertyChanging("Sklad");
                _Sklad = value;
                ReportPropertyChanged("Sklad");
                OnSkladChanged();
            }
        }
        private Nullable<global::System.Decimal> _Sklad;
        partial void OnSkladChanging(Nullable<global::System.Decimal> value);
        partial void OnSkladChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_LogActionsAndCraft_MatsAndGoods", "MatsAndGoods")]
        public MatsAndGoodsItem MatsAndGoodsItem1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MatsAndGoodsItem>("LightSwitchApplication.FK_LogActionsAndCraft_MatsAndGoods", "MatsAndGoods").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MatsAndGoodsItem>("LightSwitchApplication.FK_LogActionsAndCraft_MatsAndGoods", "MatsAndGoods").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MatsAndGoodsItem> MatsAndGoodsItem1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MatsAndGoodsItem>("LightSwitchApplication.FK_LogActionsAndCraft_MatsAndGoods", "MatsAndGoods");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MatsAndGoodsItem>("LightSwitchApplication.FK_LogActionsAndCraft_MatsAndGoods", "MatsAndGoods", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_LogActionsAndCraft_LogActionsAndCraft1", "Skladi")]
        public SkladiItem SkladiItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SkladiItem>("LightSwitchApplication.FK_LogActionsAndCraft_LogActionsAndCraft1", "Skladi").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SkladiItem>("LightSwitchApplication.FK_LogActionsAndCraft_LogActionsAndCraft1", "Skladi").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SkladiItem> SkladiItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SkladiItem>("LightSwitchApplication.FK_LogActionsAndCraft_LogActionsAndCraft1", "Skladi");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SkladiItem>("LightSwitchApplication.FK_LogActionsAndCraft_LogActionsAndCraft1", "Skladi", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="LogMatsAndGoodsQuantitiesItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LogMatsAndGoodsQuantitiesItem : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта LogMatsAndGoodsQuantitiesItem.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        public static LogMatsAndGoodsQuantitiesItem CreateLogMatsAndGoodsQuantitiesItem(global::System.Decimal id)
        {
            LogMatsAndGoodsQuantitiesItem logMatsAndGoodsQuantitiesItem = new LogMatsAndGoodsQuantitiesItem();
            logMatsAndGoodsQuantitiesItem.ID = id;
            return logMatsAndGoodsQuantitiesItem;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = value;
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Decimal _ID;
        partial void OnIDChanging(global::System.Decimal value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> c_Date
        {
            get
            {
                return _c_Date;
            }
            set
            {
                Onc_DateChanging(value);
                ReportPropertyChanging("c_Date");
                _c_Date = value;
                ReportPropertyChanged("c_Date");
                Onc_DateChanged();
            }
        }
        private Nullable<global::System.DateTime> _c_Date;
        partial void Onc_DateChanging(Nullable<global::System.DateTime> value);
        partial void Onc_DateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = value;
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private Nullable<global::System.Decimal> _Quantity;
        partial void OnQuantityChanging(Nullable<global::System.Decimal> value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> MatsAndGoodsItemID
        {
            get
            {
                return _MatsAndGoodsItemID;
            }
            set
            {
                OnMatsAndGoodsItemIDChanging(value);
                ReportPropertyChanging("MatsAndGoodsItemID");
                _MatsAndGoodsItemID = value;
                ReportPropertyChanged("MatsAndGoodsItemID");
                OnMatsAndGoodsItemIDChanged();
            }
        }
        private Nullable<global::System.Decimal> _MatsAndGoodsItemID;
        partial void OnMatsAndGoodsItemIDChanging(Nullable<global::System.Decimal> value);
        partial void OnMatsAndGoodsItemIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> SkladItemID
        {
            get
            {
                return _SkladItemID;
            }
            set
            {
                OnSkladItemIDChanging(value);
                ReportPropertyChanging("SkladItemID");
                _SkladItemID = value;
                ReportPropertyChanged("SkladItemID");
                OnSkladItemIDChanged();
            }
        }
        private Nullable<global::System.Decimal> _SkladItemID;
        partial void OnSkladItemIDChanging(Nullable<global::System.Decimal> value);
        partial void OnSkladItemIDChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_LogMatsAndGoodsQuantities_MatsAndGoods", "MatsAndGoods")]
        public MatsAndGoodsItem MatsAndGoodsItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MatsAndGoodsItem>("LightSwitchApplication.FK_LogMatsAndGoodsQuantities_MatsAndGoods", "MatsAndGoods").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MatsAndGoodsItem>("LightSwitchApplication.FK_LogMatsAndGoodsQuantities_MatsAndGoods", "MatsAndGoods").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MatsAndGoodsItem> MatsAndGoodsItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MatsAndGoodsItem>("LightSwitchApplication.FK_LogMatsAndGoodsQuantities_MatsAndGoods", "MatsAndGoods");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MatsAndGoodsItem>("LightSwitchApplication.FK_LogMatsAndGoodsQuantities_MatsAndGoods", "MatsAndGoods", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_LogMatsAndGoodsQuantities_Skladi", "Skladi")]
        public SkladiItem SkladiItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SkladiItem>("LightSwitchApplication.FK_LogMatsAndGoodsQuantities_Skladi", "Skladi").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SkladiItem>("LightSwitchApplication.FK_LogMatsAndGoodsQuantities_Skladi", "Skladi").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SkladiItem> SkladiItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SkladiItem>("LightSwitchApplication.FK_LogMatsAndGoodsQuantities_Skladi", "Skladi");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SkladiItem>("LightSwitchApplication.FK_LogMatsAndGoodsQuantities_Skladi", "Skladi", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="MatsAndGoodsItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MatsAndGoodsItem : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта MatsAndGoodsItem.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        /// <param name="name">Исходное значение свойства Name.</param>
        /// <param name="category">Исходное значение свойства Category.</param>
        /// <param name="unit">Исходное значение свойства Unit.</param>
        public static MatsAndGoodsItem CreateMatsAndGoodsItem(global::System.Decimal id, global::System.String name, global::System.String category, global::System.String unit)
        {
            MatsAndGoodsItem matsAndGoodsItem = new MatsAndGoodsItem();
            matsAndGoodsItem.ID = id;
            matsAndGoodsItem.Name = name;
            matsAndGoodsItem.Category = category;
            matsAndGoodsItem.Unit = unit;
            return matsAndGoodsItem;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = value;
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Decimal _ID;
        partial void OnIDChanging(global::System.Decimal value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = value;
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Category
        {
            get
            {
                return _Category;
            }
            set
            {
                OnCategoryChanging(value);
                ReportPropertyChanging("Category");
                _Category = value;
                ReportPropertyChanged("Category");
                OnCategoryChanged();
            }
        }
        private global::System.String _Category;
        partial void OnCategoryChanging(global::System.String value);
        partial void OnCategoryChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Unit
        {
            get
            {
                return _Unit;
            }
            set
            {
                OnUnitChanging(value);
                ReportPropertyChanging("Unit");
                _Unit = value;
                ReportPropertyChanged("Unit");
                OnUnitChanged();
            }
        }
        private global::System.String _Unit;
        partial void OnUnitChanging(global::System.String value);
        partial void OnUnitChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Note
        {
            get
            {
                return _Note;
            }
            set
            {
                OnNoteChanging(value);
                ReportPropertyChanging("Note");
                _Note = value;
                ReportPropertyChanged("Note");
                OnNoteChanged();
            }
        }
        private global::System.String _Note;
        partial void OnNoteChanging(global::System.String value);
        partial void OnNoteChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FullName
        {
            get
            {
                return _FullName;
            }
            set
            {
                OnFullNameChanging(value);
                ReportPropertyChanging("FullName");
                _FullName = value;
                ReportPropertyChanged("FullName");
                OnFullNameChanged();
            }
        }
        private global::System.String _FullName;
        partial void OnFullNameChanging(global::System.String value);
        partial void OnFullNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = value;
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> TotalQuantity
        {
            get
            {
                return _TotalQuantity;
            }
            set
            {
                OnTotalQuantityChanging(value);
                ReportPropertyChanging("TotalQuantity");
                _TotalQuantity = value;
                ReportPropertyChanged("TotalQuantity");
                OnTotalQuantityChanged();
            }
        }
        private Nullable<global::System.Decimal> _TotalQuantity;
        partial void OnTotalQuantityChanging(Nullable<global::System.Decimal> value);
        partial void OnTotalQuantityChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> TotalQuantityNeeded
        {
            get
            {
                return _TotalQuantityNeeded;
            }
            set
            {
                OnTotalQuantityNeededChanging(value);
                ReportPropertyChanging("TotalQuantityNeeded");
                _TotalQuantityNeeded = value;
                ReportPropertyChanged("TotalQuantityNeeded");
                OnTotalQuantityNeededChanged();
            }
        }
        private Nullable<global::System.Decimal> _TotalQuantityNeeded;
        partial void OnTotalQuantityNeededChanging(Nullable<global::System.Decimal> value);
        partial void OnTotalQuantityNeededChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> TotalQuantityDifference
        {
            get
            {
                return _TotalQuantityDifference;
            }
            set
            {
                OnTotalQuantityDifferenceChanging(value);
                ReportPropertyChanging("TotalQuantityDifference");
                _TotalQuantityDifference = value;
                ReportPropertyChanged("TotalQuantityDifference");
                OnTotalQuantityDifferenceChanged();
            }
        }
        private Nullable<global::System.Decimal> _TotalQuantityDifference;
        partial void OnTotalQuantityDifferenceChanging(Nullable<global::System.Decimal> value);
        partial void OnTotalQuantityDifferenceChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_MatsAndGoodsQuantities_MatsAndGoods", "MatsAndGoodsQuantities")]
        public EntityCollection<MatsAndGoodsQuantitiesItem> MatsAndGoodsQuantities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MatsAndGoodsQuantitiesItem>("LightSwitchApplication.FK_MatsAndGoodsQuantities_MatsAndGoods", "MatsAndGoodsQuantities");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MatsAndGoodsQuantitiesItem>("LightSwitchApplication.FK_MatsAndGoodsQuantities_MatsAndGoods", "MatsAndGoodsQuantities", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Recipes_MatsAndGoods", "Recipes")]
        public EntityCollection<RecipesItem> Recipes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RecipesItem>("LightSwitchApplication.FK_Recipes_MatsAndGoods", "Recipes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RecipesItem>("LightSwitchApplication.FK_Recipes_MatsAndGoods", "Recipes", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_RecipesComponents_MatsAndGoods", "RecipesComponents")]
        public EntityCollection<RecipesComponentsItem> RecipesComponents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RecipesComponentsItem>("LightSwitchApplication.FK_RecipesComponents_MatsAndGoods", "RecipesComponents");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RecipesComponentsItem>("LightSwitchApplication.FK_RecipesComponents_MatsAndGoods", "RecipesComponents", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_ActionsFiller_MatsAndGoods", "ActionsFiller")]
        public EntityCollection<ActionsFillerItem> ActionsFiller
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ActionsFillerItem>("LightSwitchApplication.FK_ActionsFiller_MatsAndGoods", "ActionsFiller");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ActionsFillerItem>("LightSwitchApplication.FK_ActionsFiller_MatsAndGoods", "ActionsFiller", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_CraftFiller_MatsAndGoods", "CraftFiller")]
        public EntityCollection<CraftFillerItem> CraftFiller
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CraftFillerItem>("LightSwitchApplication.FK_CraftFiller_MatsAndGoods", "CraftFiller");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CraftFillerItem>("LightSwitchApplication.FK_CraftFiller_MatsAndGoods", "CraftFiller", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_LogActionsAndCraft_MatsAndGoods", "LogActionsAndCraft")]
        public EntityCollection<LogActionsAndCraftItem> LogActionsAndCraft
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LogActionsAndCraftItem>("LightSwitchApplication.FK_LogActionsAndCraft_MatsAndGoods", "LogActionsAndCraft");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LogActionsAndCraftItem>("LightSwitchApplication.FK_LogActionsAndCraft_MatsAndGoods", "LogActionsAndCraft", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_LogMatsAndGoodsQuantities_MatsAndGoods", "LogMatsAndGoodsQuantities")]
        public EntityCollection<LogMatsAndGoodsQuantitiesItem> LogMatsAndGoodsQuantities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LogMatsAndGoodsQuantitiesItem>("LightSwitchApplication.FK_LogMatsAndGoodsQuantities_MatsAndGoods", "LogMatsAndGoodsQuantities");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LogMatsAndGoodsQuantitiesItem>("LightSwitchApplication.FK_LogMatsAndGoodsQuantities_MatsAndGoods", "LogMatsAndGoodsQuantities", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_MatsAndGoodsPrices_MatsAndGoodsPrices", "MatsAndGoodsPrices")]
        public EntityCollection<MatsAndGoodsPricesItem> MatsAndGoodsPrices
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MatsAndGoodsPricesItem>("LightSwitchApplication.FK_MatsAndGoodsPrices_MatsAndGoodsPrices", "MatsAndGoodsPrices");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MatsAndGoodsPricesItem>("LightSwitchApplication.FK_MatsAndGoodsPrices_MatsAndGoodsPrices", "MatsAndGoodsPrices", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="MatsAndGoodsPricesItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MatsAndGoodsPricesItem : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта MatsAndGoodsPricesItem.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        /// <param name="mAGID">Исходное значение свойства MAGID.</param>
        public static MatsAndGoodsPricesItem CreateMatsAndGoodsPricesItem(global::System.Decimal id, global::System.Decimal mAGID)
        {
            MatsAndGoodsPricesItem matsAndGoodsPricesItem = new MatsAndGoodsPricesItem();
            matsAndGoodsPricesItem.ID = id;
            matsAndGoodsPricesItem.MAGID = mAGID;
            return matsAndGoodsPricesItem;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = value;
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Decimal _ID;
        partial void OnIDChanging(global::System.Decimal value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> LastPrice
        {
            get
            {
                return _LastPrice;
            }
            set
            {
                OnLastPriceChanging(value);
                ReportPropertyChanging("LastPrice");
                _LastPrice = value;
                ReportPropertyChanged("LastPrice");
                OnLastPriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _LastPrice;
        partial void OnLastPriceChanging(Nullable<global::System.Decimal> value);
        partial void OnLastPriceChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastDate
        {
            get
            {
                return _LastDate;
            }
            set
            {
                OnLastDateChanging(value);
                ReportPropertyChanging("LastDate");
                _LastDate = value;
                ReportPropertyChanged("LastDate");
                OnLastDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastDate;
        partial void OnLastDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal MAGID
        {
            get
            {
                return _MAGID;
            }
            set
            {
                OnMAGIDChanging(value);
                ReportPropertyChanging("MAGID");
                _MAGID = value;
                ReportPropertyChanged("MAGID");
                OnMAGIDChanged();
            }
        }
        private global::System.Decimal _MAGID;
        partial void OnMAGIDChanging(global::System.Decimal value);
        partial void OnMAGIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> SupplierID
        {
            get
            {
                return _SupplierID;
            }
            set
            {
                OnSupplierIDChanging(value);
                ReportPropertyChanging("SupplierID");
                _SupplierID = value;
                ReportPropertyChanged("SupplierID");
                OnSupplierIDChanged();
            }
        }
        private Nullable<global::System.Decimal> _SupplierID;
        partial void OnSupplierIDChanging(Nullable<global::System.Decimal> value);
        partial void OnSupplierIDChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_MatsAndGoodsPrices_MatsAndGoodsPrices", "MatsAndGoods")]
        public MatsAndGoodsItem MatsAndGoodsItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MatsAndGoodsItem>("LightSwitchApplication.FK_MatsAndGoodsPrices_MatsAndGoodsPrices", "MatsAndGoods").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MatsAndGoodsItem>("LightSwitchApplication.FK_MatsAndGoodsPrices_MatsAndGoodsPrices", "MatsAndGoods").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MatsAndGoodsItem> MatsAndGoodsItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MatsAndGoodsItem>("LightSwitchApplication.FK_MatsAndGoodsPrices_MatsAndGoodsPrices", "MatsAndGoods");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MatsAndGoodsItem>("LightSwitchApplication.FK_MatsAndGoodsPrices_MatsAndGoodsPrices", "MatsAndGoods", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_MatsAndGoodsPrices_Suppliers", "Suppliers")]
        public SuppliersItem SuppliersItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SuppliersItem>("LightSwitchApplication.FK_MatsAndGoodsPrices_Suppliers", "Suppliers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SuppliersItem>("LightSwitchApplication.FK_MatsAndGoodsPrices_Suppliers", "Suppliers").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SuppliersItem> SuppliersItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SuppliersItem>("LightSwitchApplication.FK_MatsAndGoodsPrices_Suppliers", "Suppliers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SuppliersItem>("LightSwitchApplication.FK_MatsAndGoodsPrices_Suppliers", "Suppliers", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="MatsAndGoodsQuantitiesItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MatsAndGoodsQuantitiesItem : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта MatsAndGoodsQuantitiesItem.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        public static MatsAndGoodsQuantitiesItem CreateMatsAndGoodsQuantitiesItem(global::System.Decimal id)
        {
            MatsAndGoodsQuantitiesItem matsAndGoodsQuantitiesItem = new MatsAndGoodsQuantitiesItem();
            matsAndGoodsQuantitiesItem.ID = id;
            return matsAndGoodsQuantitiesItem;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = value;
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Decimal _ID;
        partial void OnIDChanging(global::System.Decimal value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = value;
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private Nullable<global::System.Decimal> _Quantity;
        partial void OnQuantityChanging(Nullable<global::System.Decimal> value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> MatsAndGoodID
        {
            get
            {
                return _MatsAndGoodID;
            }
            set
            {
                OnMatsAndGoodIDChanging(value);
                ReportPropertyChanging("MatsAndGoodID");
                _MatsAndGoodID = value;
                ReportPropertyChanged("MatsAndGoodID");
                OnMatsAndGoodIDChanged();
            }
        }
        private Nullable<global::System.Decimal> _MatsAndGoodID;
        partial void OnMatsAndGoodIDChanging(Nullable<global::System.Decimal> value);
        partial void OnMatsAndGoodIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> SkladID
        {
            get
            {
                return _SkladID;
            }
            set
            {
                OnSkladIDChanging(value);
                ReportPropertyChanging("SkladID");
                _SkladID = value;
                ReportPropertyChanged("SkladID");
                OnSkladIDChanged();
            }
        }
        private Nullable<global::System.Decimal> _SkladID;
        partial void OnSkladIDChanging(Nullable<global::System.Decimal> value);
        partial void OnSkladIDChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_MatsAndGoodsQuantities_MatsAndGoods", "MatsAndGoods")]
        public MatsAndGoodsItem MatsAndGoodsItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MatsAndGoodsItem>("LightSwitchApplication.FK_MatsAndGoodsQuantities_MatsAndGoods", "MatsAndGoods").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MatsAndGoodsItem>("LightSwitchApplication.FK_MatsAndGoodsQuantities_MatsAndGoods", "MatsAndGoods").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MatsAndGoodsItem> MatsAndGoodsItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MatsAndGoodsItem>("LightSwitchApplication.FK_MatsAndGoodsQuantities_MatsAndGoods", "MatsAndGoods");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MatsAndGoodsItem>("LightSwitchApplication.FK_MatsAndGoodsQuantities_MatsAndGoods", "MatsAndGoods", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_MatsAndGoodsQuantities_Skladi", "Skladi")]
        public SkladiItem SkladiItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SkladiItem>("LightSwitchApplication.FK_MatsAndGoodsQuantities_Skladi", "Skladi").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SkladiItem>("LightSwitchApplication.FK_MatsAndGoodsQuantities_Skladi", "Skladi").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SkladiItem> SkladiItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SkladiItem>("LightSwitchApplication.FK_MatsAndGoodsQuantities_Skladi", "Skladi");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SkladiItem>("LightSwitchApplication.FK_MatsAndGoodsQuantities_Skladi", "Skladi", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="RecipesComponentsItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RecipesComponentsItem : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта RecipesComponentsItem.
        /// </summary>
        /// <param name="componentID">Исходное значение свойства ComponentID.</param>
        /// <param name="id">Исходное значение свойства ID.</param>
        /// <param name="quantity">Исходное значение свойства Quantity.</param>
        /// <param name="recipeID">Исходное значение свойства RecipeID.</param>
        public static RecipesComponentsItem CreateRecipesComponentsItem(global::System.Decimal componentID, global::System.Decimal id, global::System.Decimal quantity, global::System.Decimal recipeID)
        {
            RecipesComponentsItem recipesComponentsItem = new RecipesComponentsItem();
            recipesComponentsItem.ComponentID = componentID;
            recipesComponentsItem.ID = id;
            recipesComponentsItem.Quantity = quantity;
            recipesComponentsItem.RecipeID = recipeID;
            return recipesComponentsItem;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal ComponentID
        {
            get
            {
                return _ComponentID;
            }
            set
            {
                OnComponentIDChanging(value);
                ReportPropertyChanging("ComponentID");
                _ComponentID = value;
                ReportPropertyChanged("ComponentID");
                OnComponentIDChanged();
            }
        }
        private global::System.Decimal _ComponentID;
        partial void OnComponentIDChanging(global::System.Decimal value);
        partial void OnComponentIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = value;
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Decimal _ID;
        partial void OnIDChanging(global::System.Decimal value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = value;
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Decimal _Quantity;
        partial void OnQuantityChanging(global::System.Decimal value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal RecipeID
        {
            get
            {
                return _RecipeID;
            }
            set
            {
                OnRecipeIDChanging(value);
                ReportPropertyChanging("RecipeID");
                _RecipeID = value;
                ReportPropertyChanged("RecipeID");
                OnRecipeIDChanged();
            }
        }
        private global::System.Decimal _RecipeID;
        partial void OnRecipeIDChanging(global::System.Decimal value);
        partial void OnRecipeIDChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_RecipesComponents_MatsAndGoods", "MatsAndGoods")]
        public MatsAndGoodsItem MatsAndGoodsItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MatsAndGoodsItem>("LightSwitchApplication.FK_RecipesComponents_MatsAndGoods", "MatsAndGoods").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MatsAndGoodsItem>("LightSwitchApplication.FK_RecipesComponents_MatsAndGoods", "MatsAndGoods").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MatsAndGoodsItem> MatsAndGoodsItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MatsAndGoodsItem>("LightSwitchApplication.FK_RecipesComponents_MatsAndGoods", "MatsAndGoods");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MatsAndGoodsItem>("LightSwitchApplication.FK_RecipesComponents_MatsAndGoods", "MatsAndGoods", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_RecipesComponents_Recipes", "Recipes")]
        public RecipesItem RecipesItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RecipesItem>("LightSwitchApplication.FK_RecipesComponents_Recipes", "Recipes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RecipesItem>("LightSwitchApplication.FK_RecipesComponents_Recipes", "Recipes").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RecipesItem> RecipesItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RecipesItem>("LightSwitchApplication.FK_RecipesComponents_Recipes", "Recipes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RecipesItem>("LightSwitchApplication.FK_RecipesComponents_Recipes", "Recipes", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="RecipesItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RecipesItem : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта RecipesItem.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        public static RecipesItem CreateRecipesItem(global::System.Decimal id)
        {
            RecipesItem recipesItem = new RecipesItem();
            recipesItem.ID = id;
            return recipesItem;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> DoneID
        {
            get
            {
                return _DoneID;
            }
            set
            {
                OnDoneIDChanging(value);
                ReportPropertyChanging("DoneID");
                _DoneID = value;
                ReportPropertyChanged("DoneID");
                OnDoneIDChanged();
            }
        }
        private Nullable<global::System.Decimal> _DoneID;
        partial void OnDoneIDChanging(Nullable<global::System.Decimal> value);
        partial void OnDoneIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = value;
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Decimal _ID;
        partial void OnIDChanging(global::System.Decimal value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> QuantityDone
        {
            get
            {
                return _QuantityDone;
            }
            set
            {
                OnQuantityDoneChanging(value);
                ReportPropertyChanging("QuantityDone");
                _QuantityDone = value;
                ReportPropertyChanged("QuantityDone");
                OnQuantityDoneChanged();
            }
        }
        private Nullable<global::System.Decimal> _QuantityDone;
        partial void OnQuantityDoneChanging(Nullable<global::System.Decimal> value);
        partial void OnQuantityDoneChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Recipes_MatsAndGoods", "MatsAndGoods")]
        public MatsAndGoodsItem MatsAndGoodsItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MatsAndGoodsItem>("LightSwitchApplication.FK_Recipes_MatsAndGoods", "MatsAndGoods").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MatsAndGoodsItem>("LightSwitchApplication.FK_Recipes_MatsAndGoods", "MatsAndGoods").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MatsAndGoodsItem> MatsAndGoodsItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MatsAndGoodsItem>("LightSwitchApplication.FK_Recipes_MatsAndGoods", "MatsAndGoods");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MatsAndGoodsItem>("LightSwitchApplication.FK_Recipes_MatsAndGoods", "MatsAndGoods", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_RecipesComponents_Recipes", "RecipesComponents")]
        public EntityCollection<RecipesComponentsItem> RecipesComponents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RecipesComponentsItem>("LightSwitchApplication.FK_RecipesComponents_Recipes", "RecipesComponents");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RecipesComponentsItem>("LightSwitchApplication.FK_RecipesComponents_Recipes", "RecipesComponents", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Craft_Recipes", "Craft")]
        public EntityCollection<CraftItem> Craft
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CraftItem>("LightSwitchApplication.FK_Craft_Recipes", "Craft");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CraftItem>("LightSwitchApplication.FK_Craft_Recipes", "Craft", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="ResponsibleItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ResponsibleItem : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта ResponsibleItem.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        /// <param name="name">Исходное значение свойства Name.</param>
        /// <param name="skladID">Исходное значение свойства SkladID.</param>
        public static ResponsibleItem CreateResponsibleItem(global::System.Decimal id, global::System.String name, global::System.Decimal skladID)
        {
            ResponsibleItem responsibleItem = new ResponsibleItem();
            responsibleItem.ID = id;
            responsibleItem.Name = name;
            responsibleItem.SkladID = skladID;
            return responsibleItem;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = value;
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Decimal _ID;
        partial void OnIDChanging(global::System.Decimal value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = value;
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal SkladID
        {
            get
            {
                return _SkladID;
            }
            set
            {
                OnSkladIDChanging(value);
                ReportPropertyChanging("SkladID");
                _SkladID = value;
                ReportPropertyChanged("SkladID");
                OnSkladIDChanged();
            }
        }
        private global::System.Decimal _SkladID;
        partial void OnSkladIDChanging(global::System.Decimal value);
        partial void OnSkladIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Note
        {
            get
            {
                return _Note;
            }
            set
            {
                OnNoteChanging(value);
                ReportPropertyChanging("Note");
                _Note = value;
                ReportPropertyChanged("Note");
                OnNoteChanged();
            }
        }
        private global::System.String _Note;
        partial void OnNoteChanging(global::System.String value);
        partial void OnNoteChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_CraftAction_Responsible", "CraftAction")]
        public EntityCollection<CraftActionItem> CraftAction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CraftActionItem>("LightSwitchApplication.FK_CraftAction_Responsible", "CraftAction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CraftActionItem>("LightSwitchApplication.FK_CraftAction_Responsible", "CraftAction", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Responsible_Skladi", "Skladi")]
        public SkladiItem SkladiItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SkladiItem>("LightSwitchApplication.FK_Responsible_Skladi", "Skladi").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SkladiItem>("LightSwitchApplication.FK_Responsible_Skladi", "Skladi").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SkladiItem> SkladiItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SkladiItem>("LightSwitchApplication.FK_Responsible_Skladi", "Skladi");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SkladiItem>("LightSwitchApplication.FK_Responsible_Skladi", "Skladi", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="SkladiItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SkladiItem : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта SkladiItem.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        /// <param name="name">Исходное значение свойства Name.</param>
        public static SkladiItem CreateSkladiItem(global::System.Decimal id, global::System.String name)
        {
            SkladiItem skladiItem = new SkladiItem();
            skladiItem.ID = id;
            skladiItem.Name = name;
            return skladiItem;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = value;
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Decimal _ID;
        partial void OnIDChanging(global::System.Decimal value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = value;
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Adress
        {
            get
            {
                return _Adress;
            }
            set
            {
                OnAdressChanging(value);
                ReportPropertyChanging("Adress");
                _Adress = value;
                ReportPropertyChanged("Adress");
                OnAdressChanged();
            }
        }
        private global::System.String _Adress;
        partial void OnAdressChanging(global::System.String value);
        partial void OnAdressChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Note
        {
            get
            {
                return _Note;
            }
            set
            {
                OnNoteChanging(value);
                ReportPropertyChanging("Note");
                _Note = value;
                ReportPropertyChanged("Note");
                OnNoteChanged();
            }
        }
        private global::System.String _Note;
        partial void OnNoteChanging(global::System.String value);
        partial void OnNoteChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = value;
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Actions_Skladi", "Actions")]
        public EntityCollection<ActionsItem> Actions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ActionsItem>("LightSwitchApplication.FK_Actions_Skladi", "Actions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ActionsItem>("LightSwitchApplication.FK_Actions_Skladi", "Actions", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Actions_Skladi1", "Actions")]
        public EntityCollection<ActionsItem> Actions1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ActionsItem>("LightSwitchApplication.FK_Actions_Skladi1", "Actions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ActionsItem>("LightSwitchApplication.FK_Actions_Skladi1", "Actions", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_MatsAndGoodsQuantities_Skladi", "MatsAndGoodsQuantities")]
        public EntityCollection<MatsAndGoodsQuantitiesItem> MatsAndGoodsQuantities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MatsAndGoodsQuantitiesItem>("LightSwitchApplication.FK_MatsAndGoodsQuantities_Skladi", "MatsAndGoodsQuantities");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MatsAndGoodsQuantitiesItem>("LightSwitchApplication.FK_MatsAndGoodsQuantities_Skladi", "MatsAndGoodsQuantities", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_CraftAction_Skladi", "CraftAction")]
        public EntityCollection<CraftActionItem> CraftAction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CraftActionItem>("LightSwitchApplication.FK_CraftAction_Skladi", "CraftAction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CraftActionItem>("LightSwitchApplication.FK_CraftAction_Skladi", "CraftAction", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Responsible_Skladi", "Responsible")]
        public EntityCollection<ResponsibleItem> Responsible
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ResponsibleItem>("LightSwitchApplication.FK_Responsible_Skladi", "Responsible");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ResponsibleItem>("LightSwitchApplication.FK_Responsible_Skladi", "Responsible", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_LogMatsAndGoodsQuantities_Skladi", "LogMatsAndGoodsQuantities")]
        public EntityCollection<LogMatsAndGoodsQuantitiesItem> LogMatsAndGoodsQuantities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LogMatsAndGoodsQuantitiesItem>("LightSwitchApplication.FK_LogMatsAndGoodsQuantities_Skladi", "LogMatsAndGoodsQuantities");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LogMatsAndGoodsQuantitiesItem>("LightSwitchApplication.FK_LogMatsAndGoodsQuantities_Skladi", "LogMatsAndGoodsQuantities", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_LogActionsAndCraft_LogActionsAndCraft1", "LogActionsAndCraft")]
        public EntityCollection<LogActionsAndCraftItem> LogActionsAndCraft
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LogActionsAndCraftItem>("LightSwitchApplication.FK_LogActionsAndCraft_LogActionsAndCraft1", "LogActionsAndCraft");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LogActionsAndCraftItem>("LightSwitchApplication.FK_LogActionsAndCraft_LogActionsAndCraft1", "LogActionsAndCraft", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="SuppliersItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SuppliersItem : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта SuppliersItem.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        /// <param name="name">Исходное значение свойства Name.</param>
        public static SuppliersItem CreateSuppliersItem(global::System.Decimal id, global::System.String name)
        {
            SuppliersItem suppliersItem = new SuppliersItem();
            suppliersItem.ID = id;
            suppliersItem.Name = name;
            return suppliersItem;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = value;
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Decimal _ID;
        partial void OnIDChanging(global::System.Decimal value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = value;
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FullName
        {
            get
            {
                return _FullName;
            }
            set
            {
                OnFullNameChanging(value);
                ReportPropertyChanging("FullName");
                _FullName = value;
                ReportPropertyChanged("FullName");
                OnFullNameChanged();
            }
        }
        private global::System.String _FullName;
        partial void OnFullNameChanging(global::System.String value);
        partial void OnFullNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Country
        {
            get
            {
                return _Country;
            }
            set
            {
                OnCountryChanging(value);
                ReportPropertyChanging("Country");
                _Country = value;
                ReportPropertyChanged("Country");
                OnCountryChanged();
            }
        }
        private global::System.String _Country;
        partial void OnCountryChanging(global::System.String value);
        partial void OnCountryChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Region
        {
            get
            {
                return _Region;
            }
            set
            {
                OnRegionChanging(value);
                ReportPropertyChanging("Region");
                _Region = value;
                ReportPropertyChanged("Region");
                OnRegionChanged();
            }
        }
        private global::System.String _Region;
        partial void OnRegionChanging(global::System.String value);
        partial void OnRegionChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = value;
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Adress
        {
            get
            {
                return _Adress;
            }
            set
            {
                OnAdressChanging(value);
                ReportPropertyChanging("Adress");
                _Adress = value;
                ReportPropertyChanged("Adress");
                OnAdressChanged();
            }
        }
        private global::System.String _Adress;
        partial void OnAdressChanging(global::System.String value);
        partial void OnAdressChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Postcode
        {
            get
            {
                return _Postcode;
            }
            set
            {
                OnPostcodeChanging(value);
                ReportPropertyChanging("Postcode");
                _Postcode = value;
                ReportPropertyChanged("Postcode");
                OnPostcodeChanged();
            }
        }
        private global::System.String _Postcode;
        partial void OnPostcodeChanging(global::System.String value);
        partial void OnPostcodeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String INN_KPP
        {
            get
            {
                return _INN_KPP;
            }
            set
            {
                OnINN_KPPChanging(value);
                ReportPropertyChanging("INN_KPP");
                _INN_KPP = value;
                ReportPropertyChanged("INN_KPP");
                OnINN_KPPChanged();
            }
        }
        private global::System.String _INN_KPP;
        partial void OnINN_KPPChanging(global::System.String value);
        partial void OnINN_KPPChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OGRN
        {
            get
            {
                return _OGRN;
            }
            set
            {
                OnOGRNChanging(value);
                ReportPropertyChanging("OGRN");
                _OGRN = value;
                ReportPropertyChanged("OGRN");
                OnOGRNChanged();
            }
        }
        private global::System.String _OGRN;
        partial void OnOGRNChanging(global::System.String value);
        partial void OnOGRNChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OKPO
        {
            get
            {
                return _OKPO;
            }
            set
            {
                OnOKPOChanging(value);
                ReportPropertyChanging("OKPO");
                _OKPO = value;
                ReportPropertyChanged("OKPO");
                OnOKPOChanged();
            }
        }
        private global::System.String _OKPO;
        partial void OnOKPOChanging(global::System.String value);
        partial void OnOKPOChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OKVED
        {
            get
            {
                return _OKVED;
            }
            set
            {
                OnOKVEDChanging(value);
                ReportPropertyChanging("OKVED");
                _OKVED = value;
                ReportPropertyChanged("OKVED");
                OnOKVEDChanged();
            }
        }
        private global::System.String _OKVED;
        partial void OnOKVEDChanging(global::System.String value);
        partial void OnOKVEDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ContactName
        {
            get
            {
                return _ContactName;
            }
            set
            {
                OnContactNameChanging(value);
                ReportPropertyChanging("ContactName");
                _ContactName = value;
                ReportPropertyChanged("ContactName");
                OnContactNameChanged();
            }
        }
        private global::System.String _ContactName;
        partial void OnContactNameChanging(global::System.String value);
        partial void OnContactNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PhoneNumber
        {
            get
            {
                return _PhoneNumber;
            }
            set
            {
                OnPhoneNumberChanging(value);
                ReportPropertyChanging("PhoneNumber");
                _PhoneNumber = value;
                ReportPropertyChanged("PhoneNumber");
                OnPhoneNumberChanged();
            }
        }
        private Nullable<global::System.Int32> _PhoneNumber;
        partial void OnPhoneNumberChanging(Nullable<global::System.Int32> value);
        partial void OnPhoneNumberChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FaxNumber
        {
            get
            {
                return _FaxNumber;
            }
            set
            {
                OnFaxNumberChanging(value);
                ReportPropertyChanging("FaxNumber");
                _FaxNumber = value;
                ReportPropertyChanged("FaxNumber");
                OnFaxNumberChanged();
            }
        }
        private Nullable<global::System.Int32> _FaxNumber;
        partial void OnFaxNumberChanging(Nullable<global::System.Int32> value);
        partial void OnFaxNumberChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Note
        {
            get
            {
                return _Note;
            }
            set
            {
                OnNoteChanging(value);
                ReportPropertyChanging("Note");
                _Note = value;
                ReportPropertyChanged("Note");
                OnNoteChanged();
            }
        }
        private global::System.String _Note;
        partial void OnNoteChanging(global::System.String value);
        partial void OnNoteChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NDS
        {
            get
            {
                return _NDS;
            }
            set
            {
                OnNDSChanging(value);
                ReportPropertyChanging("NDS");
                _NDS = value;
                ReportPropertyChanged("NDS");
                OnNDSChanged();
            }
        }
        private global::System.String _NDS;
        partial void OnNDSChanging(global::System.String value);
        partial void OnNDSChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Actions_Suppliers", "Actions")]
        public EntityCollection<ActionsItem> Actions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ActionsItem>("LightSwitchApplication.FK_Actions_Suppliers", "Actions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ActionsItem>("LightSwitchApplication.FK_Actions_Suppliers", "Actions", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_MatsAndGoodsPrices_Suppliers", "MatsAndGoodsPrices")]
        public EntityCollection<MatsAndGoodsPricesItem> MatsAndGoodsPrices
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MatsAndGoodsPricesItem>("LightSwitchApplication.FK_MatsAndGoodsPrices_Suppliers", "MatsAndGoodsPrices");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MatsAndGoodsPricesItem>("LightSwitchApplication.FK_MatsAndGoodsPrices_Suppliers", "MatsAndGoodsPrices", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
